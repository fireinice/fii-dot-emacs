;; Object misc/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "misc/"
  :tables (list 
   (semanticdb-table "header2.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("and" code nil nil [13008 13074]) ("lib-requires" include nil nil [13091 13120]) ("header2" package nil nil [13258 13276]) ("header2" include nil nil [13277 13295]) ("defgroup" code nil nil [14178 14993]) ("header-max" variable (:user-visible-flag t :default-value 50000) nil [14995 15131]) ("header-copyright-notice" variable (:user-visible-flag t) nil [15133 15340]) ("header-date-format" variable (:default-value t) nil [15342 15740]) ("make-header-hook" variable (:user-visible-flag t :default-value (quote (header-title header-blank header-file-name header-description header-author header-maintainer header-copyright header-creation-date header-version header-modification-date header-modification-author header-update-count header-url header-keywords header-compatibility header-blank header-lib-requires header-end-line header-commentary header-blank header-blank header-blank header-end-line header-history header-blank header-blank header-end-line header-free-software header-code header-eof))) nil [16104 18798]) ("header-history-label" variable (:user-visible-flag t :default-value "Change log:") nil [18800 18960]) ("header-free-software" variable (:user-visible-flag t :default-value "This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 3, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; see the file COPYING.  If not, write to
the Free Software Foundation, Inc., 51 Franklin Street, Fifth
Floor, Boston, MA 02110-1301, USA.") nil [18962 19779]) ("return-to" variable nil nil [19847 20001]) ("header-multiline" variable nil nil [20003 20148]) ("file-header-update-alist" variable nil nil [20150 20401]) ("header-prefix-string" variable nil nil [20403 20495]) ("explicit-shell-file-name" variable nil nil [20528 20561]) ("c-style" variable nil nil [20562 20578]) ("header-blank" function nil nil [20646 20785]) ("section-comment-start" function nil nil [20814 21067]) ("header-title" function nil nil [21092 21465]) ("header-file-name" function nil nil [21467 21619]) ("header-description" function nil nil [21621 21738]) ("header-author" function nil nil [21740 21905]) ("header-maintainer" function nil nil [21907 22021]) ("header-copyright" function nil nil [22023 22642]) ("header-creation-date" function nil nil [22644 22827]) ("header-date-string" function nil nil [22829 23102]) ("header-rcs-id" function nil nil [23104 23241]) ("header-version" function nil nil [23243 23365]) ("header-sccs" function nil nil [23367 23509]) ("header-commentary" function nil nil [23511 23637]) ("header-history" function nil nil [23639 23890]) ("header-free-software" function nil nil [23892 24047]) ("header-multiline" function nil nil [24122 24843]) ("header-code" function nil nil [24918 25086]) ("header-eof" function nil nil [25161 25452]) ("header-modification-date" function nil nil [25454 25650]) ("header-modification-author" function nil nil [25652 25866]) ("header-update-count" function nil nil [25868 26020]) ("header-url" function nil nil [26022 26115]) ("header-keywords" function nil nil [26117 26225]) ("header-compatibility" function nil nil [26227 26352]) ("header-lib-requires" function nil nil [26354 26619]) ("header-status" function nil nil [26621 26725]) ("header-toc" function nil nil [26727 26887]) ("header-rcs-log" function nil nil [26889 27122]) ("header-AFS" function nil nil [27160 27285]) ("header-shell" function nil nil [27287 27774]) ("header-mode-line" function nil nil [27851 29326]) ("header-end-line" function nil nil [29430 29760]) ("register-file-header-action" function (:arguments ("regexp" "function-to-call")) nil [29970 30636]) ("register-file-header-action" code nil nil [30912 30991]) ("register-file-header-action" code nil nil [30992 31066]) ("register-file-header-action" code nil nil [31067 31139]) ("when" code nil nil [31140 31249]) ("true-mode-name" function nil nil [31350 31875]) ("header-prefix-string" function nil nil [31950 32867]) ("auto-make-header" function nil nil [32960 33152]) ("make-header" function (:user-visible-flag t) nil [33169 34048]) ("make-revision" function (:user-visible-flag t) nil [34065 37415]) ("make-divider" function (:user-visible-flag t :arguments ("&optional" "end-col")) nil [37432 37982]) ("make-box-comment" function (:user-visible-flag t :arguments ("&optional" "end-col")) nil [37999 38979]) ("update-file-header" function (:user-visible-flag t) nil [39061 40085]) ("auto-update-file-header" function nil nil [40102 40411]) ("delete-and-forget-line" function nil nil [40656 40909]) ("update-write-count" function nil nil [40911 41211]) ("update-last-modifier" function nil nil [41213 41491]) ("update-last-modified-date" function nil nil [41493 41650]) ("update-file-name" function nil nil [41652 42052]) ("update-lib-requires" function nil nil [42054 43879]) ("headerable-file-p" function (:arguments ("file")) nil [44209 44573]) ("uniquify-list" function (:arguments ("list")) nil [44575 44794]))
    :file "header2.el"
    :pointmax 50008
    )
   (semanticdb-table "tabbar.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("tabbar-version" variable (:constant-flag t :default-value "1.3") nil [303 334]) ("defgroup" code nil nil [6930 7015]) ("tabbar-cycling-scope" variable (:user-visible-flag t) nil [7017 7549]) ("tabbar-inhibit-functions" variable (:default-value (quote (tabbar-default-inhibit-function))) nil [7551 7864]) ("tabbar-current-tabset-function" variable (:default-value (quote tabbar-buffer-tabs)) nil [7866 8079]) ("tabbar-tab-label-function" variable (:default-value (quote tabbar-buffer-tab-label)) nil [8081 8301]) ("tabbar-select-tab-function" variable (:default-value (quote tabbar-buffer-select-tab)) nil [8303 8521]) ("tabbar-help-on-tab-function" variable (:default-value (quote tabbar-buffer-help-on-tab)) nil [8523 8819]) ("tabbar-home-function" variable (:default-value (quote tabbar-buffer-toggle-group-mode)) nil [8821 9034]) ("tabbar-home-help-function" variable (:default-value (quote tabbar-buffer-toggle-group-mode-help)) nil [9036 9320]) ("tabbar-scroll-left-function" variable (:default-value (quote tabbar-scroll-left)) nil [9322 9586]) ("tabbar-scroll-left-help-function" variable (:default-value (quote tabbar-scroll-left-help)) nil [9588 9865]) ("tabbar-scroll-right-function" variable (:default-value (quote tabbar-scroll-right)) nil [9867 10135]) ("tabbar-scroll-right-help-function" variable (:default-value (quote tabbar-scroll-right-help)) nil [10137 10417]) ("tabbar-tabsets-tabset-name" variable (:constant-flag t :default-value "tabbar-tabsets-tabset") nil [10443 10558]) ("tabbar-make-tab" function (:arguments ("object" "tabset")) nil [10560 10707]) ("tabbar-tab-value" function (:arguments ("tab")) nil [10709 10787]) ("tabbar-tab-tabset" function (:arguments ("tab")) nil [10789 10874]) ("tabbar-tabsets" variable nil nil [10876 10927]) ("tabbar-current-tabset" variable nil nil [10929 11015]) ("make-variable-buffer-local" code nil nil [11016 11067]) ("tabbar-last-selected-tab" variable nil nil [11069 11133]) ("tabbar-free-tabsets-store" function nil nil [11135 11301]) ("tabbar-init-tabsets-store" function nil nil [11303 11449]) ("tabbar-map-tabsets" function (:arguments ("function")) nil [11451 11907]) ("tabbar-make-tabset" function (:arguments ("name" "&rest" "objects")) nil [11909 12349]) ("tabbar-get-tabset" function (:arguments ("name")) nil [12351 12501]) ("tabbar-delete-tabset" function (:arguments ("tabset")) nil [12503 12653]) ("tabbar-tabs" function (:arguments ("tabset")) nil [12655 12749]) ("tabbar-tab-values" function (:arguments ("tabset")) nil [12751 12883]) ("tabbar-get-tab" function (:arguments ("object" "tabset")) nil [12885 13057]) ("tabbar-member" function (:arguments ("tab" "tabset")) nil [13059 13217]) ("tabbar-template" function (:arguments ("tabset")) nil [13219 13341]) ("tabbar-set-template" function (:arguments ("tabset" "template")) nil [13343 13480]) ("tabbar-selected-tab" function (:arguments ("tabset")) nil [13482 13583]) ("tabbar-selected-value" function (:arguments ("tabset")) nil [13585 13728]) ("tabbar-selected-p" function (:arguments ("tab" "tabset")) nil [13730 13868]) ("tabbar-select-tab" function (:arguments ("tab" "tabset")) nil [13870 14178]) ("tabbar-select-tab-value" function (:arguments ("object" "tabset")) nil [14180 14475]) ("tabbar-start" function (:arguments ("tabset")) nil [14477 14591]) ("tabbar-view" function (:arguments ("tabset")) nil [14593 14728]) ("tabbar-add-tab" function (:arguments ("tabset" "object" "&optional" "append")) nil [14730 15314]) ("tabbar-delete-tab" function (:arguments ("tab")) nil [15316 15684]) ("tabbar-scroll" function (:arguments ("tabset" "count")) nil [15686 16091]) ("tabbar-tab-next" function (:arguments ("tabset" "tab" "&optional" "before")) nil [16093 16497]) ("tabbar-current-tabset" function (:arguments ("&optional" "update")) nil [16499 17072]) ("tabbar-get-tabsets-tabset" function nil nil [17074 17642]) ("tabbar-find-image" function (:arguments ("specs")) nil [17675 17938]) ("tabbar-separator-widget" variable (:constant-flag t :default-value (quote (cons (string) (repeat :tag "Image" :extra-offset 2 (restricted-sexp :tag "Spec" :match-alternatives (listp)))))) nil [17940 18431]) ("tabbar-setup-separator" function (:arguments ("variable" "value")) nil [18433 18958]) ("tabbar-separator-value" variable nil nil [18960 19040]) ("tabbar-separator" variable (:default-value (list " ")) nil [19042 19250]) ("tabbar-button-widget" variable (:constant-flag t :default-value (quote (cons (cons :tag "Enabled" (string) (repeat :tag "Image" :extra-offset 2 (restricted-sexp :tag "Spec" :match-alternatives (listp)))) (cons :tag "Disabled" (string) (repeat :tag "Image" :extra-offset 2 (restricted-sexp :tag "Spec" :match-alternatives (listp))))))) nil [19252 20151]) ("tabbar-setup-button" function (:arguments ("variable" "value")) nil [20153 21460]) ("tabbar-make-button-keymap" function (:arguments ("callback")) nil [21462 22068]) ("tabbar-home-button-enabled" variable nil nil [22070 22146]) ("tabbar-home-button-disabled" variable nil nil [22148 22226]) ("tabbar-home-button-keymap" variable (:constant-flag t :default-value (tabbar-make-button-keymap (quote tabbar-home-button-callback))) nil [22228 22354]) ("tabbar-home-button-callback" function (:user-visible-flag t :arguments ("event")) nil [22356 22705]) ("tabbar-home-button-help" function (:arguments ("window" "object" "position")) nil [22707 22988]) ("tabbar-home-button-enabled-image" variable (:constant-flag t :default-value (quote ((:type pbm :ascent center :data "P2
10 10
255
184 184 184 184 0 184 184 184 184 184 184 184 184 0 0 0 184 184 184 184
184 184 0 0 0 0 0 184 184 184 184 0 0 0 0 0 0 0 184 184 184 184 255 0 0
0 255 255 255 184 184 0 0 0 0 0 0 0 184 184 184 184 0 0 0 0 0 255 255 184
184 184 184 0 0 0 255 255 184 184 184 184 184 184 0 255 255 184 184 184
184 184 184 184 184 255 184 184 184 184
")))) nil [22990 23466]) ("tabbar-home-button-disabled-image" variable (:constant-flag t :default-value (quote ((:type pbm :ascent center :data "P2
10 10
255
184 184 184 184 120 184 184 184 184 184 184 184 184 120 120 120 184 184
184 184 184 184 120 184 184 184 120 184 184 184 184 120 120 160 184 160
120 120 184 184 184 184 255 120 184 120 255 255 255 184 184 120 120 160
184 160 120 120 184 184 184 184 120 184 184 184 120 255 255 184 184 184
184 120 120 120 255 255 184 184 184 184 184 184 120 255 255 184 184 184
184 184 184 184 184 255 184 184 184 184
")))) nil [23468 24016]) ("tabbar-home-button" variable (:default-value (cons (cons "[o]" tabbar-home-button-enabled-image) (cons "[x]" tabbar-home-button-disabled-image))) nil [24018 24306]) ("tabbar-scroll-left-button-enabled" variable nil nil [24308 24398]) ("tabbar-scroll-left-button-disabled" variable nil nil [24400 24492]) ("tabbar-scroll-left-button-keymap" variable (:constant-flag t :default-value (tabbar-make-button-keymap (quote tabbar-scroll-left-button-callback))) nil [24494 24641]) ("tabbar-scroll-left-button-callback" function (:user-visible-flag t :arguments ("event")) nil [24643 25027]) ("tabbar-scroll-left-button-help" function (:arguments ("window" "object" "position")) nil [25029 25345]) ("tabbar-scroll-left-button-enabled-image" variable (:constant-flag t :default-value (quote ((:type pbm :ascent center :data "P2
8 10
255
184 184 184 184 184 184 184 184 184 184 184 184 184 0 184 184 184 184 184
184 0 0 255 184 184 184 184 0 0 0 255 184 184 184 0 0 0 0 255 184 184 184
184 0 0 0 255 184 184 184 184 184 0 0 255 184 184 184 184 184 184 0 255
184 184 184 184 184 184 184 255 184 184 184 184 184 184 184 184 184
")))) nil [25347 25794]) ("tabbar-scroll-left-button-disabled-image" variable (:constant-flag t :default-value (quote ((:type pbm :ascent center :data "P2
8 10
255
184 184 184 184 184 184 184 184 184 184 184 184 184 120 184 184 184 184
184 184 120 120 255 184 184 184 184 120 184 120 255 184 184 184 120 184
184 120 255 184 184 184 184 120 184 120 255 184 184 184 184 184 120 120
255 184 184 184 184 184 184 120 255 184 184 184 184 184 184 184 255 184
184 184 184 184 184 184 184 184
")))) nil [25796 26277]) ("tabbar-scroll-left-button" variable (:default-value (cons (cons " <" tabbar-scroll-left-button-enabled-image) (cons " =" tabbar-scroll-left-button-disabled-image))) nil [26279 26593]) ("tabbar-scroll-right-button-enabled" variable nil nil [26595 26687]) ("tabbar-scroll-right-button-disabled" variable nil nil [26689 26783]) ("tabbar-scroll-right-button-keymap" variable (:constant-flag t :default-value (tabbar-make-button-keymap (quote tabbar-scroll-right-button-callback))) nil [26785 26935]) ("tabbar-scroll-right-button-callback" function (:user-visible-flag t :arguments ("event")) nil [26937 27326]) ("tabbar-scroll-right-button-help" function (:arguments ("window" "object" "position")) nil [27328 27649]) ("tabbar-scroll-right-button-enabled-image" variable (:constant-flag t :default-value (quote ((:type pbm :ascent center :data "P2
8 10
255
184 184 184 184 184 184 184 184 184 0 184 184 184 184 184 184 184 0 0 184
184 184 184 184 184 0 0 0 184 184 184 184 184 0 0 0 0 184 184 184 184 0
0 0 255 255 184 184 184 0 0 255 255 184 184 184 184 0 255 255 184 184 184
184 184 184 255 184 184 184 184 184 184 184 184 184 184 184 184 184
")))) nil [27651 28100]) ("tabbar-scroll-right-button-disabled-image" variable (:constant-flag t :default-value (quote ((:type pbm :ascent center :data "P2
8 10
255
184 184 184 184 184 184 184 184 184 120 184 184 184 184 184 184 184 120
120 184 184 184 184 184 184 120 184 120 184 184 184 184 184 120 184 184
120 184 184 184 184 120 184 120 255 255 184 184 184 120 120 255 255 184
184 184 184 120 255 255 184 184 184 184 184 184 255 184 184 184 184 184
184 184 184 184 184 184 184 184
")))) nil [28102 28585]) ("tabbar-scroll-right-button" variable (:default-value (cons (cons " >" tabbar-scroll-right-button-enabled-image) (cons " =" tabbar-scroll-right-button-disabled-image))) nil [28587 28905]) ("tabbar-default-face" variable (:default-value (quote ((t (:inherit variable-pitch :height 0.8 :foreground "gray60" :background "gray72"))))) nil [28921 29176]) ("tabbar-unselected-face" variable (:default-value (quote ((t (:inherit tabbar-default-face :box (:line-width 2 :color "white" :style pressed-button)))))) nil [29178 29411]) ("tabbar-selected-face" variable (:default-value (quote ((t (:inherit tabbar-default-face :box (:line-width 2 :color "white" :style released-button) :foreground "blue"))))) nil [29413 29681]) ("tabbar-separator-face" variable (:default-value (quote ((t (:inherit tabbar-default-face :height 0.2))))) nil [29683 29877]) ("tabbar-button-face" variable (:default-value (quote ((t (:inherit tabbar-default-face :box (:line-width 2 :color "white" :style released-button) :foreground "dark red"))))) nil [29879 30155]) ("tabbar-scroll-left" function (:arguments ("event")) nil [30174 30360]) ("tabbar-scroll-left-help" function nil nil [30362 30503]) ("tabbar-scroll-right" function (:arguments ("event")) nil [30505 30692]) ("tabbar-scroll-right-help" function nil nil [30694 30838]) ("tabbar-make-select-tab-command" function (:arguments ("tab")) nil [30918 31461]) ("tabbar-make-help-on-tab-function" function (:arguments ("tab")) nil [31465 31913]) ("tabbar-line-element" function (:arguments ("tab")) nil [31920 33158]) ("tabbar-line" function nil nil [33160 34803]) ("tabbar-make-mouse-event" function (:arguments ("&optional" "type")) nil [34844 35218]) ("tabbar-click-on-tab" function (:arguments ("tab" "&optional" "type")) nil [35220 35498]) ("tabbar-cycle" function (:arguments ("&optional" "backward")) nil [35500 37600]) ("tabbar-backward" function (:user-visible-flag t) nil [37617 37777]) ("tabbar-forward" function (:user-visible-flag t) nil [37794 37947]) ("tabbar-backward-group" function (:user-visible-flag t) nil [37964 38130]) ("tabbar-forward-group" function (:user-visible-flag t) nil [38147 38306]) ("tabbar-backward-tab" function (:user-visible-flag t) nil [38323 38466]) ("tabbar-forward-tab" function (:user-visible-flag t) nil [38483 38619]) ("tabbar-old-global-hlf" variable nil nil [38641 38739]) ("tabbar-header-line-format" variable (:constant-flag t :default-value (quote (:eval (tabbar-line)))) nil [38741 38836]) ("define-minor-mode" code nil nil [38853 39971]) ("tabbar-old-local-hlf" variable nil nil [39973 40075]) ("make-variable-buffer-local" code nil nil [40076 40126]) ("define-minor-mode" code nil nil [40143 41108]) ("tabbar-default-inhibit-function" function nil nil [41124 41394]) ("tabbar-buffer-kill-buffer-hook" function nil nil [41396 42405]) ("tabbar-buffer-list-function" variable (:user-visible-flag t :default-value (quote tabbar-buffer-list)) nil [42427 42664]) ("tabbar-buffer-groups-function" variable (:user-visible-flag t :default-value (quote tabbar-buffer-groups)) nil [42666 42996]) ("tabbar-buffer-list" function nil nil [42998 43394]) ("tabbar-buffer-groups" function (:arguments ("buffer")) nil [43396 44477]) ("tabbar-buffer-cleanup-tabsets" function (:arguments ("buffers")) nil [44513 45137]) ("tabbar-buffer-update-groups" function nil nil [45139 46045]) ("tabbar-buffer-group-mode" variable nil nil [46073 46163]) ("make-variable-buffer-local" code nil nil [46164 46218]) ("tabbar-buffer-tabs" function nil nil [46220 46989]) ("tabbar-buffer-tab-label" function (:arguments ("tab")) nil [46991 47241]) ("tabbar-buffer-help-on-tab" function (:arguments ("tab")) nil [47243 47518]) ("tabbar-buffer-select-tab" function (:arguments ("event" "tab")) nil [47520 47963]) ("tabbar-buffer-toggle-group-mode" function (:arguments ("event")) nil [47965 48189]) ("tabbar-buffer-toggle-group-mode-help" function nil nil [48191 48432]) ("tabbar" package nil nil [48434 48451]))
    :file "tabbar.el"
    :pointmax 48477
    )
   (semanticdb-table "smart-compile.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("defgroup" code nil nil [1459 1565]) ("smart-compile-alist" variable (:default-value (quote ((emacs-lisp-mode emacs-lisp-byte-compile) (html-mode browse-url-of-buffer) (nxhtml-mode browse-url-of-buffer) (html-helper-mode browse-url-of-buffer) (octave-mode run-octave) ("\\.c\\'" . "gcc -O2 %f -lm -o %n") ("\\.[Cc]+[Pp]*\\'" . "g++ -O2 %f -lm -o %n") ("\\.m\\'" . "gcc -O2 %f -lobjc -lpthread -o %n") ("\\.java\\'" . "javac %f") ("\\.php\\'" . "php -l %f") ("\\.f90\\'" . "f90 %f -o %n") ("\\.[Ff]\\'" . "f77 %f -o %n") ("\\.cron\\(tab\\)?\\'" . "crontab %f") ("\\.tex\\'" tex-file) ("\\.texi\\'" . "makeinfo %f") ("\\.mp\\'" . "mptopdf %f") ("\\.pl\\'" . "perl -cw %f") ("\\.rb\\'" . "ruby -cw %f")))) nil [1567 3030]) ("put" code nil nil [3031 3081]) ("smart-compile-replace-alist" variable (:default-value (quote (("%F" buffer-file-name) ("%f" file-name-nondirectory (buffer-file-name)) ("%n" file-name-sans-extension (file-name-nondirectory (buffer-file-name))) ("%e" or (file-name-extension (buffer-file-name)) "")))) nil [3083 3364]) ("put" code nil nil [3365 3423]) ("smart-compile-check-makefile" variable (:default-value t) nil [3425 3464]) ("make-variable-buffer-local" code nil nil [3465 3523]) ("smart-compile-make-program" variable (:default-value "make ") nil [3525 3664]) ("smart-compile" function (:user-visible-flag t) nil [3682 6538]) ("smart-compile-string" function (:arguments ("arg")) nil [6540 6969]) ("smart-compile" package nil nil [6971 6995]))
    :file "smart-compile.el"
    :pointmax 7028
    )
   (semanticdb-table "fvwm-mode.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("fvwm-mode-hook" variable nil nil [5604 5669]) ("fvwm-last-updated-prefix" variable (:default-value "# Last edited on ") nil [5758 5811]) ("fvwm-time-format-string" variable (:default-value "%Y/%m/%d - %X") nil [5812 5925]) ("fvwm-last-updated-suffix" variable (:default-value "                                        #") nil [5926 6003]) ("fvwm-fvwmcommand-path" variable (:default-value "/usr/X11R6/bin/FvwmCommand") nil [6005 6239]) ("fvwm-keywords-force-case" variable (:default-value t) nil [6241 6571]) ("if" code nil nil [6573 6828]) ("fvwm-mode-map" variable (:default-value (let ((fvwm-mode-map (make-sparse-keymap))) (define-key fvwm-mode-map "ib" (quote fvwm-insert-buttons)) (define-key fvwm-mode-map "if" (quote fvwm-insert-function)) (define-key fvwm-mode-map "im" (quote fvwm-insert-menu)) (define-key fvwm-mode-map "iw" (quote fvwm-script-insert-widget)) (define-key fvwm-mode-map "ec" (quote fvwm-execute-command)) (define-key fvwm-mode-map "eb" (quote fvwm-execute-buffer)) (define-key fvwm-mode-map "ef" (quote fvwm-execute-file)) (define-key fvwm-mode-map "er" (quote fvwm-execute-region)) (if (featurep (quote pcomplete)) (define-key fvwm-mode-map "\211" (quote pcomplete)) (define-key fvwm-mode-map "\211" (quote fvwm-complete-keyword))) fvwm-mode-map)) nil [6916 7678]) ("easy-menu-define" code nil nil [7767 8322]) ("fvwm-syntax-table" variable (:default-value (let ((table (copy-syntax-table))) (modify-syntax-entry 34 "_" table) (modify-syntax-entry 45 "w" table) (modify-syntax-entry 95 "w" table) table)) nil [8411 8909]) ("fvwm-special-face" variable (:default-value (quote fvwm-special-face)) nil [8998 9072]) ("fvwm-special-face" variable (:default-value (quote ((((class grayscale) (background light)) (foreground "DimGray" :bold t :italic t)) (((class grayscale) (background dark)) (foreround "LightGray" :bold t :italic t)) (((class color) (background light)) (:foreground "SteelBlue")) (((class color) (background dark)) (:foreground "bisque1")) (t (:bold t :italic t))))) nil [9073 9586]) ("fvwm-rgb-value-face" variable (:default-value (quote fvwm-rgb-value-face)) nil [10170 10250]) ("fvwm-rgb-value-face" variable (:default-value (quote ((((class grayscale) (background light)) (foreground "DimGray" :bold t :italic t)) (((class grayscale) (background dark)) (foreround "LightGray" :bold t :italic t)) (((class color) (background light)) (:foreground "LightSalmon")) (((class color) (background dark)) (:foreground "LightSalmon")) (t (:bold t :italic t))))) nil [10251 10729]) ("font-lock" include nil nil [10818 10838]) ("fvwm-functions" variable (:default-value (quote ("AddButtonStyle" "AddTitleStyle" "AddToDecor" "AddToFunc" "AddToMenu" "AnimatedMove" "Any" "AppsBackingStore" "Autoraise" "BackingStore" "Beep" "BorderStyle" "BoundaryWidth" "BugOpts" "BusyCursor" "ButtonState" "ButtonStyle" "DestroyModuleConfig" "ChangeDecor" "ChangeMenuStyle" "CenterOnCirculate" "CirculateDown" "CirculateHit" "CirculateSkip" "CirculateSkipIcons" "CirculateUp" "ClickTime" "ClickToFocus" "Close" "ColorLimit" "ColormapFocus" "CopyMenuStyle" "Current" "Cursor" "CursorMove" "CursorStyle" "DecorateTransients" "DefaultColors" "DefaultColorset" "DefaultFont" "DefaultIcon" "DefaultLayers" "Delete" "Desk" "DesktopName" "DesktopSize" "Destroy" "DestroyModule" "Deschedule" "DestroyDecor" "DestroyFunc" "DestroyMenu" "DestroyMenuStyle" "Direction" "DontMoveOff" "Echo" "EdgeCommand" "EdgeResistance" "EdgeScroll" "EdgeThickness" "Emulate" "EndFunction" "EndMenu" "EndPopup" "EscapeFunc" "EWMHBaseStruts" "Exec" "ExecUseShell" "ExitFunction" "EWMHActivateWindowFunc" "FakeClick" "FlipFocus" "Focus" "Function" "GlobalOpts" "GnomeButton" "GotoDesk" "GotoDenkAndPage" "GotoPage" "HiBackColor" "HideGeometryWindow" "HiForeColor" "HilightColor" "Icon" "IconBox" "IconFont" "Iconify" "IconPath" "IgnoreModifiers" "ImagePath" "Key" "Layer" "Lenience" "Lower" "Maximize" "Menu" "MenuBackColor" "MenuForeColor" "MenuStippleColor" "MenuStyle" "Module" "ModuleListenOnly" "ModulePath" "Mouse" "Move" "MoveThreshold" "MoveToDesk" "MoveToPage" "MoveToScreen" "MWMBorders" "MWMButtons" "MWMDecorHints" "MWMFunctionHints" "MWMHintOverride" "MWMMenus" "Next" "NoBorder" "NoBoundaryWidth" "None" "Nop" "NoPPosition" "NoTitle" "OpaqueMove" "OpaqueMoveSize" "OpaqueResize" "Pager" "PagerBackColor" "PagerFont" "PagerForeColor" "PagingDefault" "Pick" "PipeRead" "PixmapPath" "PlaceAgain" "PointerKey" "Popup" "Prev" "Quit" "QuitScreen" "QuitSession" "Raise" "RaiseLower" "RandomPlacement" "Read" "Recapture" "RecaptureWindow" "Refresh" "Resize" "ResizeMove" "Restart" "SaveUnders" "SaveQuitSession" "SaveSession" "Scroll" "SetAnimation" "SetEnv" "SetMenuDelay" "SetMenuStyle" "SendToModule" "Silent" "SmartPlacement" "SnapAttraction" "SnapGrid" "StartsOnDesk" "StaysOnTop" "StdBackColor" "StdForeColor" "Stick" "Sticky" "StickyBackColor" "StickyForeColor" "StickyIcons" "Stroke" "StrokeFunc" "StubbornIconPlacement" "StubbornIcons" "StubbornPlacement" "Style" "StyleFocus" "SuppressIcons" "Swallow" "Schedule" "Test" "TitleStyle" "TogglePage" "ThisWindow" "TestRc" "UnsetEnv" "UpdateDecor" "UpdateStyles" "Wait" "Warp" "WarpToWindow" "WindowFont" "WindowId" "WindowList" "WindowListSkip" "WindowShade" "WindowShadeAnimate" "WindowsDesk" "Xinerama" "XineramaPrimaryScreen" "XineramaSls" "XineramaSlsSize" "XorPixmap" "XorValue"))) nil [10864 13697]) ("fvwm-keywords-1" variable (:default-value (quote ("Action" "Active" "ActiveColorset" "ActiveDown" "ActiveFore" "ActiveForeOff" "ActivePlacement" "ActivePlacementHonorsStartsOnPage" "ActivePlacementIgnoresStartsOnPage" "ActiveUp" "All" "AllDesks" "AllowRestack" "AllPages" "Alphabetic" "Anim" "Animated" "Animation" "AnimationOff" "AutomaticHotkeys" "AutomaticHotkeysOff" "AdjustedPixmap" "BGradient" "Back" "BackColor" "Background" "BackingStore" "BackingStoreOff" "BalloonColorset" "bg" "Balloons" "BalloonFont" "BalloonYOffset" "BalloonBorderWidth" "BorderColorset" "BorderWidth" "Bottom" "BoundaryWidth" "Buffer" "Button" "Button0" "Button1" "Button2" "Button3" "Button4" "Button5" "Button6" "Button7" "Button8" "Button9" "ButtonGeometry" "CGradient" "CaptureHonorsStorsOnPage" "CoptureIgnoresStartsOnPage" "CascadePlacement" "Centered" "CirculateHit" "CirculateHitIcon" "CirculateHitShaded" "CirculateSkip" "CirculateSkipIcon" "CirculateSkipShaded" "Clear" "ClickToFocus" "ClickToFocusDoesntPassClick" "ClickToFocusDoestRaise" "ClickToFocusPassesClick" "ClickToFocusPassesClickOff" "ClickToFocusRaises" "ClickToFocusRaisesOff" "Color" "Colorset" "Context" "Columns" "CurrentDesk" "CurrentPage" "CurrentPageAnyDesk" "DrawMotion" "DGradient" "DecorateTransient" "Default" "Delay" "DepressableBorder" "Desk" "DontLowerTransient" "DontRaiseTransient" "DontShowName" "DontStackTransient" "DontStackTransientParent" "DoubleClick" "DoubleClickTime" "Down" "DrawIcons" "DumbPlacement" "DynamicMenu" "DynamicPopDownAction" "DynamicPopupAction" "East" "Expect" "Effect" "FVWM" "FirmBorder" "Fixed" "FixedPosition" "FixedPPosition" "FixedSize" "Flat" "FlickeringMoveWorkaround" "FlickeringQtDialogsWorkaround" "FocusColorset" "FocusButton" "FocusFollowsMouse" "FollowsFocus" "FollowsMouse" "Fore" "Font" "ForeColor" "ForeGround" "Format" "Frame" "Function" "Fvwm" "FvwmBorder" "FvwmButtons" "FeedBack" "fg" "fgsh" "fgAlpha" "GNOMEIgnoreHints" "GNOMEUseHints" "Geometry" "GrabFocus" "GrabFocusOff" "GrabFocusTransient" "GrabFocusTransientOff" "Greyed" "GreyedColorset" "HGradient" "Handles" "HandleWidth" "Height" "HiddenHandles" "Hilight3DOff" "Hilight3DThick" "Hilight3DThickness" "Hilight3dThin" "HilightBack" "HilightBackOff" "HilightBorderColorset" "HilightColorset" "HilightFore" "HintOverride" "HoldSubmenus" "HilightIconTitleColorset" "hi" "Icon" "IconAlpha" "IconBox" "IconFill" "IconFont" "IconGrid" "IconOverride" "IconTitle" "Iconic" "IconifyWindowGroups" "IconifyWindowGroupsOff" "Icons" "IgnoreRestack" "Inactive" "InActive" "IndexedWindowName" "Interior" "Item" "ItemFormat" "Iterations" "IconTitleColorset" "IconTitleRelief" "IndexedIconName" "IconBackgroundPadding" "IconTint" "KeepWindowGroupsOnDesk" "Last" "Layer" "Left" "LeftJustified" "LeftJustify" "Lenience" "LowerTransient" "LeftOfText" "Match" "MWM" "MWMBorder" "MWMDecor" "MWMDecorMax" "MWMDecorMenu" "MWMDecorMin" "MWMFunctions" "ManagerGeometry" "ManualPlacement" "ManualPlacementHonorsStartsOnPage" "ManualPlacementIgnoresStartsOnPage" "MaxWindowSize" "Maximized" "Menu" "MenuColorset" "MenuFace" "MiniIcons" "MinOverlapPercentPlacement" "MinOverlapPlacement" "MiniIcon" "MixedVisualWorkaround" "ModalityIsEvil" "ModuleSynchronous" "Mouse" "MouseFocus" "MouseFocusClickDoesntRaise" "MouseFocusClickRaises" "MouseFocusClickRaisesOff" "Move" "Mwm" "MwmBorder" "MwmButtons" "MwmDecor" "MwmFunctions" "MultiPixmap"))) nil [13723 17423]) ("fvwm-keywords-2" variable (:default-value (quote ("NakedTransient" "Never" "NeverFocus" "NoActiveIconOverride" "NoBorder" "NoButton" "NoBoundaryWidth" "NoButton" "NoDecorHint" "NoDeskSort" "NoFuncHint" "NoGeometry" "NoGeometryWithInfo" "NoHandles" "NoHotkeys" "NoIcon" "NoIconAction" "NoIconOverride" "NoIconPosition" "NoIconTitle" "NoIcons" "NoInset" "NoLenience" "NoMatch" "NoNormal" "NoOLDecor" "NoOnBottom" "NoOnTop" "NoOverride" "NoPPosition" "NoResizeOverride" "NoSticky" "NoShape" "NoStipledTitles" "NoTitle" "NoTransientPPosition" "NoTransientUSPosition" "NoUSPosition" "NoWarp" "Normal" "North" "Northeast" "Northwest" "NotAlphabetic" "OLDecor" "OnBottom" "OnTop" "Once" "OnlyIcons" "OnlyListSkip" "OnlyNormal" "OnlyOnBottom" "OnlyOnTop" "OnlySticky" "Opacity" "Padding" "Panel" "ParentalRelativity" "Periodic" "Pixmap" "PlainButton" "PopdownDelayed" "PopdownDelay" "PopupDelay" "PopupAsRootMenu" "PopupAsSubmenu" "PopdownImmediately" "PopupDelayed" "PopupImmediately" "PopupOffset" "Quiet" "RGradient" "RaiseOverNativeWindows" "RaiseOverUnmanaged" "RaiseTransient" "Raised" "Read" "RecaptureHonorsStartsOnPage" "RecaptureIgnoresStartsOnPage" "Rectangle" "ReliefThickness" "RemoveSubmenus" "Reset" "Resize" "ResizeHintOverride" "ResizeOpaque" "ResizeOutline" "Resolution" "Reverse" "ReverseOrder" "Right" "RightJustified" "Root" "RootTransparent" "Rows" "RightTitleRotatedCCW" "SGradient" "SameType" "SaveUnder" "SaveUnderDiff" "ScatterWindowGroups" "Screen" "SelectButton" "SelectInPlace" "SelectOnReleasE" "SelectWarp" "SeparatorsLong" "SeparatorsShort" "ShowCurrentDesk" "ShowMapping" "SideColor" "SidePic" "Simple" "SkipMapping" "Slippery" "SlipperyIcon" "SmallFont" "SloppyFocus" "SmartPlacement" "SmartPlacementIsNormal" "SmartPlacementIsReallySmart" "Solid" "SolidSeparators" "Sort" "South" "Southeast" "Southwest" "StackTransientParent" "StartIconic" "StartNormal" "StartsAnyWhere" "StartsLowered" "StartsOnDesk" "StartsOnPage" "StartsOnPageIgnoresTransients" "StartsOnPageIncludesTransients" "StartsOnScreen" "StartsRaised" "StaysOnBottom" "StaysOnTop" "StaysPut" "Sticky" "StickyAcrossDesks" "StickyIcon" "StipledTitles" "StippledTitle" "StippledTitleOff" "SubmenusLeft" "SubmenusRight" "Sunk" "StrokeWidth" "sh" "This" "TileCascadePlacement" "TileManualPlacement" "TiledPixmap" "Timeout" "Tint" "Title" "TitleAtBottom" "TitleColorset" "TitleFont" "TitleAtLeft" "TitleAtRight" "TitleAtTop" "TitleUnderlines0" "TitleUnderlines1" "TitleUnderlines2" "TitleWarp" "TitleWarpOff" "Top" "Transient" "Translucent" "TrianglesRelief" "TrianglesSolid" "Toggle" "Twist" "UnderMousePlacement" "Up" "UseBorderStyle" "UseDecor" "UseIconName" "UseIconPosition" "UseListSkip" "UsePPosition" "UseSkipList" "UseStack" "UseStyle" "UseTitleStyle" "UseTransientPPosition" "UseTransientUSPosition" "UseUSPosition" "UseWinList" "UnderText" "VGradient" "VariablePosition" "Vector" "VerticalItemSpacing" "VerticalTitleSpacing" "Width" "WIN" "Wait" "Warp" "WarpTitle" "West" "Win" "Window" "WindowBorderWidth" "Window3dBorders" "WindowColorsets" "WindowListHit" "WindowListSkip" "WindowShadeScrolls" "WindowShadeShrinks" "Window3DBorders" "WindowShadeSteps" "Windows" "XineramaRoot" "YGradient"))) nil [17425 20898]) ("if" code nil nil [21007 21396]) ("fvwm-fp-focusstyles" variable (:default-value (concat "\\<" (regexp-opt (quote ("FPFocusClickButtons" "FPFocusClickModifiers" "!FPSortWindowlistByFocus" "FPSortWindowlistByFocus" "FPClickRaisesFocused" "!FPClickRaisesFocused" "FPClickDecorRaisesFocused" "!FPClickDecorRaisesFocused" "FPClickIconRaisesFocused" "!FPClickIconRaisesFocused" "!FPClickRaisesUnfocused" "FPClickRaisesUnfocused" "FPClickDecorRaisesUnfocused" "FPClickDecorRaisesUnfocused" "FPClickIconRaisesUnfocused" "!FPClickIconRaisesUnfocused" "FPClickToFocus" "!FPClickToFocus" "FPClickDecorToFocus" "!FPClickDecorToFocus" "FPClickIconToFocus" "!FPClickIconToFocus" "!FPEnterToFocus" "FPEnterToFocus" "!FPLeaveToUnfocus" "FPLeaveToUnfocus" "!FPFocusByProgram" "FPFocusByProgram" "!FPFocusByFunction" "FPFocusByFunction" "FPFocusByFunctionWarpPointer" "!FPFocusByFunctionWarpPointer" "FPLenient" "!FPLenient" "!FPPassFocusClick" "FPPassFocusClick" "!FPPassRaiseClick" "FPPassRaiseClick" "FPIgnoreFocusClickMotion" "!FPIgnoreFocusClickMotion FPIgnoreRaiseClickMotion" "!FPIgnoreRaiseClickMotion" "!FPAllowFocusClickFunction" "FPAllowFocusClickFunction" "!FPAllowRaiseClickFunction" "FPAllowRaiseClickFunction" "FPGrabFocus" "FPOverrideGrabFocus" "!FPOverrideGrabFocus" "FPReleaseFocus" "!FPReleaseFocus" "!FPReleaseFocusTransient" "FPReleaseFocusTransient" "FPOverrideReleaseFocus" "!FPOverrideReleaseFocus")) t) "\\>")) nil [21463 22990]) ("fvwm-stylefocus-focusstyles" variable (:default-value (concat "\\<" (regexp-opt (quote ("FocusClickButtons" "FocusClickModifiers" "!SortWindowlistByFocus" "SortWindowlistByFocus" "ClickRaisesFocused" "!ClickRaisesFocused" "ClickDecorRaisesFocused" "!ClickDecorRaisesFocused" "ClickIconRaisesFocused" "!ClickIconRaisesFocused" "!ClickRaisesUnfocused" "ClickRaisesUnfocused" "ClickDecorRaisesUnfocused" "ClickDecorRaisesUnfocused" "ClickIconRaisesUnfocused" "!ClickIconRaisesUnfocused" "ClickToFocus !ClickToFocus" "ClickDecorToFocus" "!ClickDecorToFocus" "ClickIconToFocus" "!ClickIconToFocus" "!EnterToFocus" "EnterToFocus" "!LeaveToUnfocus" "LeaveToUnfocus" "!FocusByProgram" "FocusByProgram" "!FocusByFunction" "FocusByFunction" "FocusByFunctionWarpPointer" "!FocusByFunctionWarpPointer" "Lenient" "!Lenient" "!PassFocusClick" "PassFocusClick" "!PassRaiseClick" "PassRaiseClick" "IgnoreFocusClickMotion" "!IgnoreFocusClickMotion" "IgnoreRaiseClickMotion" "!IgnoreRaiseClickMotion" "!AllowFocusClickFunction" "AllowFocusClickFunction" "!AllowRaiseClickFunction" "AllowRaiseClickFunction" "GrabFocus" "OverrideGrabFocus" "!OverrideGrabFocus" "ReleaseFocus" "!ReleaseFocus" "!ReleaseFocusTransient")) t) "\\>")) nil [23046 24386]) ("ewmh-keywords" variable (:default-value (concat "\\<" (regexp-opt (quote ("EWMHDonateIcon" "EWMHDontDonateIcon" "EWMHDonateMiniIcon" "EWMHDontDonateMiniIcon" "EWMHMiniIconOverride" "EWMHNoMiniIconOverride" "EWMHUseStackingOrderHints" "EWMHIgnoreStackingOrderHints" "EWMHIgnoreStateHints" "EWMHUseStateHints" "EWMHMaximizeIgnoreWorkingArea" "EWMHMaximizeUseWorkingArea" "EWMHMaximizeUseDynamicWorkingArea" "EWMHPlacementIgnoreWorkingArea" "EWMHPlacementUseWorkingArea" "EWMHPlacementUseDynamicWorkingArea")) t) "\\>")) nil [24412 24969]) ("fvwm-conditionnames" variable (:default-value (concat "\\<" (regexp-opt (quote ("AcceptsFocus" "CurrentDesk" "CurrentGlobalPage" "CurrentGlobalPageAnyDesk" "CurrentPage" "CurrentPageAnyDesk" "CurrentScreen" "Iconic" "Layer" "Maximized" "PlacedByButton3" "PlacedByFvwm" "Raised" "Shaded" "Sticky" "Transient" "Visible")) t) "\\>")) nil [24995 25336]) ("fvwm-contextnames" variable (:default-value (concat "\\<" (regexp-opt (quote ("BOTTOM" "BOTTOM_EDGE" "BOTTOM_LEFT" "BOTTOM_RIGHT" "DEFAULT" "DESTROY" "LEFT" "LEFT_EDGE" "MENU" "MOVE" "RESIZE" "RIGHT" "RIGHT_EDGE" "ROOT" "SELECT" "STROKE" "SYS" "TITLE" "TOP" "TOP_EDGE" "TOP_LEFT" "TOP_RIGHT" "WAIT" "POSITION")) t) "\\>")) nil [25361 25694]) ("fvwm-special" variable (:default-value (concat "\\<" (regexp-opt (quote ("FvwmAnimate" "FvwmAudio" "FvwmAuto" "FvwmBacker" "FvwmBanner" "FvwmButtons" "FvwmCascade" "FvwmCommandS" "FvwmConsole" "FvwmConsoleC" "FvwmCpp" "FvwmDebug" "FvwmDragWell" "FvwmEvent" "FvwmForm" "FvwmGtk" "FvwmIconBox" "FvwmIconMan" "FvwmIdent" "FvwmM4" "FvwmPager" "FvwmRearrange" "FvwmSave" "FvwmSaveDesk" "FvwmScript" "FvwmScroll" "FvwmTalk" "FvwmTaskBar" "FvwmTheme" "FvwmTile" "FvwmWharf" "FvwmWindowMenu" "FvwmWinList" "StartFunction" "InitFunction" "RestartFunction" "ExitFunction" "SessionInitFunction" "SessionRestartFunction" "SessionExitFunction" "MissingSubmenuFunction")) t) "\\>")) nil [25745 26461]) ("fvwm-font-lock-keywords-1" variable (:constant-flag t :default-value (list (quote ("^[ ]*\\(#.*\\)" 1 font-lock-comment-face)) (quote ("\\(#[0-9a-fA-F]\\{12\\}\\)[ ,
]" . fvwm-rgb-value-face)) (quote ("\\(#[0-9a-fA-F]\\{9\\}\\)[ ,
]" . fvwm-rgb-value-face)) (quote ("\\(#[0-9a-fA-F]\\{6\\}\\)[ ,
]" . fvwm-rgb-value-face)) (quote ("\\(#[0-9a-fA-F]\\{3\\}\\)[ ,
]" . fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ]fg[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Ff]ore[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Ff]oreground[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ]bg[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Bb]ack[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Bb]ackground[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ]sh[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Ss]hade[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Ss]hadow[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ]hi[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Hh]ilite[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Hh]ilight[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ]fgsh[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Tt]int[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote (".*[Cc]olorset.*[ ][Ii]con[Tt]int[ ]\\([a-z\"0-9]*\\).*" 1 fvwm-rgb-value-face)) (quote ("\\(rgb:[0-9a-fA-F]\\{1,4\\}/[0-9a-fA-F]\\{1,4\\}/[0-9a-fA-F]\\{1,4\\}\\)" 1 fvwm-rgb-value-face)) (quote ("\\(&.\\)" 1 fvwm-shortcut-key-face)) (quote ("\"[^\"]*\"" . font-lock-string-face)) (quote ("'[^']*'" . font-lock-string-face)) (quote ("`[^`]*`" . font-lock-string-face)) (quote ("*\\([a-zA-Z]*\\):" 1 fvwm-special-face)) (quote ("\\($\\[[^$]*\\]\\)" 1 font-lock-variable-name-face)) (cons (concat "\\<" (regexp-opt fvwm-functions t) "\\>") font-lock-function-name-face) (cons fvwm-keywords font-lock-keyword-face) (cons fvwm-fp-focusstyles font-lock-keyword-face) (cons fvwm-stylefocus-focusstyles font-lock-keyword-face) (cons ewmh-keywords font-lock-keyword-face) (cons fvwm-conditionnames font-lock-keyword-face) (cons fvwm-contextnames font-lock-constant-face) (cons fvwm-special fvwm-special-face))) nil [26672 29741]) ("fvwmscript-instructions" variable (:default-value (concat "\\<" (regexp-opt (quote ("HideWidget" "ShowWidget" "ChangeValue" "ChangeMaxValue" "ChangeMinValue" "ChangeTitle" "ChongeLocaleTitle" "ChangeIcon" "ChangeForeColor" "ChangeBackColor" "ChangeColorset" "ChongePosition" "ChangeSize" "ChangeFont" "WarpPointer" "WriteToFile" "Do" "Set" "Quit" "SendSignal" "SendToScript" "Key")) t) "\\>")) nil [29773 30178]) ("fvwmscript-functions" variable (:default-value (concat "\\<" (regexp-opt (quote ("GetTitle" "GetValue" "GetMinValue" "GetMaxValue" "GetFore" "GetBack" "GetHilight" "GetShadow" "GetOutput" "NumToHex" "HexToNum" "Add" "Mult" "Div" "StrCopy" "LaunchScript" "GetScriptArgument" "GetScriptFather" "PressButon" "ReceivFromScript" "RemainderOfDiv" "GetTime" "GetPid" "Gettext" "SendMsgAndGet" "Parse" "LastString")) t) "\\>")) nil [30193 30623]) ("fvwmscript-properties" variable (:default-value (concat "\\<" (regexp-opt (quote ("Type" "Size" "Position" "Title" "Value" "MaxValue" "MinValue" "Font" "ForeColor" "BackColor" "HilightColor" "ShadowColor" "Colorset" "Flags")) t) "\\>")) nil [30800 31026]) ("fvwmscript-flagsopt" variable (:default-value (concat "\\<" (regexp-opt (quote ("Hidden" "NoReliefString" "NoFocus" "Left" "Center" "Right")) t) "\\>")) nil [31038 31173]) ("fvwmscript-keywords" variable (:default-value (concat "\\<" (regexp-opt (quote ("BackColor" "Colorset" "DefaultFont" "DefaultBack" "DefaultColorset" "DefaultFore" "DefaultHilight" "DefaultShadow" "Font" "ForeColor" "HilightColor" "ShadowColor" "SingleClic" "UseGettext" "WindowLocaleTitle" "WindowPosition" "WindowSize" "WindowTitle")) t) "\\>")) nil [31184 31535]) ("fvwmscript-widgets" variable (:default-value (concat "\\<" (regexp-opt (quote ("CheckBox" "HDipstick" "HScrollBar" "ItemDraw" "List" "Menu" "MiniScroll" "PopupMenu" "PushButton" "Rectangle" "SwallowExec" "TextField" "VDipstick" "VScrollBar")) t) "\\>")) nil [31545 31795]) ("fvwm-font-lock-keywords-2" variable (:constant-flag t :default-value (append fvwm-font-lock-keywords-1 (list (quote ("\\(rgb:../../..\\)" 1 fvwm-rgb-value-face)) (quote ("\\($[-_a-zA-Z0-9]*\\)" 1 font-lock-variable-name-face)) (cons fvwmscript-instructions font-lock-function-name-face) (cons fvwmscript-functions font-lock-function-name-face) (quote ("\\<\\(Begin\\|Case\\|Do\\|E\\(?:lse\\|nd\\)\\|I\\(?:f\\|nit\\)\\|Main\\|P\\(?:eriodicTasks\\|roperty\\)\\|QuitFunc\\|Set\\|Then\\|Widget\\)\\>" . font-lock-keyword-face)) (cons fvwmscript-properties font-lock-keyword-face) (cons fvwmscript-flagsopt font-lock-function-name-face) (cons fvwmscript-keywords font-lock-keyword-face) (cons fvwmscript-widgets font-lock-keyword-face)))) nil [31809 32637]) ("fvwm-font-lock-keywords" variable (:default-value fvwm-font-lock-keywords-2) nil [32639 32732]) ("fvwm-insert-function" function (:user-visible-flag t :arguments ("name")) nil [32821 33026]) ("fvwm-insert-menu" function (:user-visible-flag t :arguments ("name")) nil [33187 33398]) ("fvwm-insert-buttons" function (:user-visible-flag t :arguments ("name" "rows" "columns" "geometry")) nil [33400 34074]) ("fvwm-script-insert-skeleton" function (:user-visible-flag t :arguments ("title" "width" "height" "font")) nil [34076 34724]) ("fvwm-script-insert-widget" function (:user-visible-flag t :arguments ("type" "title" "number" "x-pos" "y-pos" "width" "height")) nil [34726 36301]) ("pcomplete-fvwm-setup" function nil nil [36390 36791]) ("pcomplete-fvwm-default-completion" function nil nil [36793 36878]) ("pcomplete-parse-fvwm-arguments" function nil nil [36880 37156]) ("if" code nil nil [37243 40979]) ("fvwm-enable-indentation" function (:user-visible-flag t) nil [41068 41285]) ("fvwm-disable-indentation" function (:user-visible-flag t) nil [41287 41501]) ("fvwm-indent-line" function (:user-visible-flag t) nil [41503 41806]) ("list" code nil nil [41808 41826]) ("fvwm-calculate-indentation" function nil nil [41828 42640]) ("add-hook" code nil nil [42729 43069]) ("fvwm-execute-command" function (:user-visible-flag t :arguments ("command")) nil [43158 43572]) ("fvwm-execute-region" function (:user-visible-flag t) nil [43574 44013]) ("fvwm-execute-buffer" function (:user-visible-flag t) nil [44015 44260]) ("fvwm-execute-file" function (:user-visible-flag t) nil [44262 44601]) ("fvwm-mode" function (:user-visible-flag t) nil [44690 45703]) ("fvwm-mode" package nil nil [45705 45725]))
    :file "fvwm-mode.el"
    :pointmax 45726
    )
   (semanticdb-table "unicad.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [4532 4545]) ("unicad-quick-size" variable (:default-value 500) nil [4548 4578]) ("unicad-quick-multibyte-words" variable (:default-value 50) nil [4579 4620]) ("unicad-quick-singlebyte-words" variable (:default-value 50) nil [4621 4662]) ("unicad-max-size" variable (:default-value 10000) nil [4663 4693]) ("unicad-default-coding-system" variable nil nil [4694 4735]) ("unicad-threshold" variable (:default-value 0.95) nil [4737 4767]) ("unicad-data-threshold" variable (:default-value 1024) nil [4768 4803]) ("unicad-minimum-data-threshold" variable (:default-value 1) nil [4804 4844]) ("unicad-minimum-size-threshold" variable (:default-value 10) nil [4845 4886]) ("unicad-cjk-prefer" variable nil nil [4888 5006]) ("unicad--sure-yes" variable (:constant-flag t :default-value 0.99) nil [5008 5040]) ("unicad--sure-no" variable (:constant-flag t :default-value 0.01) nil [5041 5072]) ("unicad-universal-charset-detect" function (:arguments ("size")) nil [5222 8558]) ("if" code nil nil [8560 8729]) ("emacs21-check-coding-system" function (:arguments ("filename" "size")) nil [8731 8974]) ("unicad-bom-detect" function nil nil [9003 10541]) ("unicad-chardet-prober" function (:arguments ("chardet")) nil [10580 10689]) ("unicad-chardet-name" function (:arguments ("chardet")) nil [10691 10804]) ("unicad-chardet-set-confidence" function (:arguments ("chardet" "conf")) nil [10806 10945]) ("unicad-chardet-confidence" function (:arguments ("chardet")) nil [10947 11035]) ("unicad-chardet" function (:arguments ("group" "prober")) nil [11037 11320]) ("unicad-sample-size" variable (:constant-flag t :default-value 64) nil [11354 11386]) ("unicad-sb-enough-rel-threshold" variable (:constant-flag t :default-value 1024) nil [11387 11433]) ("unicad-positive-shortcut-threshold" variable (:constant-flag t :default-value 0.95) nil [11434 11484]) ("unicad-negative-shortcut-threshold" variable (:constant-flag t :default-value 0.05) nil [11485 11535]) ("unicad-symbol-cat-order" variable (:constant-flag t :default-value 250) nil [11536 11574]) ("unicad-number-of-seq-cat" variable (:constant-flag t :default-value 4) nil [11575 11612]) ("unicad-positive-cat" variable (:constant-flag t :default-value (1- unicad-number-of-seq-cat)) nil [11613 11673]) ("unicad-negative-cat" variable (:constant-flag t) nil [11674 11706]) ("unicad-singlebyte-group-list" variable (:default-value (quote (unicad-latin7-prober unicad-win1253-prober unicad-koi8r-prober unicad-win1251-prober unicad-latin5-prober unicad-ibm855-prober unicad-latin5-bulgarian-prober unicad-win1251-bulgarian-prober unicad-sjis-sb-prober))) nil [11708 12102]) ("unicad-singlebyte-best-guess" variable nil nil [12104 12145]) ("unicad-singlebyte-group-guess" variable nil nil [12147 12189]) ("unicad-sb-dist-table-reset" function (:arguments ("dist-table")) nil [12191 12268]) ("unicad-sb-seq-counters++" function (:arguments ("seq-count-table" "count")) nil [12270 12394]) ("unicad-sb-get-name" function (:arguments ("model")) nil [12396 12455]) ("unicad-singlebyte-group-prober" function (:arguments ("start" "end")) nil [12457 13726]) ("unicad-singlebyte-prober" function (:arguments ("start" "end" "charset-name" "positive-ratio" "char2order-map" "lang-model")) nil [13728 16342]) ("unicad-singlebyte-get-confidence" function (:arguments ("positive-ratio" "total-char" "freq-char" "total-seqs" "seq-counters")) nil [16344 16854]) ("unicad-latin7-prober" function (:arguments ("start" "end")) nil [16856 17151]) ("unicad-latin7-name" variable (:constant-flag t :default-value (quote iso-8859-7)) nil [17153 17233]) ("unicad-latin7-positive-ratio" variable (:constant-flag t :default-value 0.982851) nil [17235 17283]) ("unicad-win1253-prober" function (:arguments ("start" "end")) nil [17285 17584]) ("unicad-win1253-name" variable (:constant-flag t :default-value (quote windows-1253)) nil [17586 17670]) ("unicad-win1253-positive-ratio" variable (:constant-flag t :default-value 0.982851) nil [17672 17721]) ("unicad-koi8r-prober" function (:arguments ("start" "end")) nil [17723 18016]) ("unicad-koi8r-name" variable (:constant-flag t :default-value (quote koi8-r)) nil [18018 18092]) ("unicad-koi8r-positive-ratio" variable (:constant-flag t :default-value 0.976601) nil [18094 18141]) ("unicad-win1251-prober" function (:arguments ("start" "end")) nil [18143 18444]) ("unicad-win1251-name" variable (:constant-flag t :default-value (quote windows-1251)) nil [18446 18530]) ("unicad-win1251-positive-ratio" variable (:constant-flag t :default-value 0.976601) nil [18532 18581]) ("unicad-latin5-prober" function (:arguments ("start" "end")) nil [18583 18880]) ("unicad-latin5-name" variable (:constant-flag t :default-value (quote iso-8859-5)) nil [18882 18962]) ("unicad-latin5-positive-ratio" variable (:constant-flag t :default-value 0.976601) nil [18964 19012]) ("unicad-ibm855-prober" function (:arguments ("start" "end")) nil [19014 19311]) ("unicad-ibm855-name" variable (:constant-flag t :default-value (quote ibm855)) nil [19313 19389]) ("unicad-ibm855-positive-ratio" variable (:constant-flag t :default-value 0.976601) nil [19391 19439]) ("unicad-latin5-bulgarian-prober" function (:arguments ("start" "end")) nil [19441 19778]) ("unicad-latin5-bulgarian-name" variable (:constant-flag t :default-value (quote iso-8859-5)) nil [19780 19880]) ("unicad-latin5-bulgarian-positive-ratio" variable (:constant-flag t :default-value 0.976601) nil [19882 19940]) ("unicad-win1251-bulgarian-prober" function (:arguments ("start" "end")) nil [19942 20283]) ("unicad-win1251-bulgarian-name" variable (:constant-flag t :default-value (quote windows-1251)) nil [20285 20389]) ("unicad-win1251-bulgarian-positive-ratio" variable (:constant-flag t :default-value 0.969392) nil [20391 20450]) ("unicad-sjis-sb-prober" function (:arguments ("start" "end")) nil [20452 20753]) ("unicad-sjis-sb-name" variable (:constant-flag t :default-value (quote sjis)) nil [20755 20831]) ("unicad-sjis-sb-positive-ratio" variable (:constant-flag t :default-value 0.95) nil [20833 20878]) ("unicad-best-guess" variable nil nil [20912 20983]) ("unicad-chosen-gb-coding-system" variable (:default-value (cond ((coding-system-p (quote gb18030)) (quote gb18030)) ((coding-system-p (quote gbk)) (quote gbk)) (t (quote gb2312)))) nil [20985 21132]) ("unicad-multibyte-group-list" variable (:default-value (\` ([sjis 0 unicad-sjis-prober] [euc-jp 0 unicad-eucjp-prober] [(\, unicad-chosen-gb-coding-system) 0 unicad-gb2312-prober] [euc-kr 0 unicad-euckr-prober] [big5 0 unicad-big5-prober] [euc-tw 0 unicad-euctw-prober] [(\, unicad-chosen-gb-coding-system) 0 unicad-gbkcht-prober] [utf-8 0 unicad-utf8-prober] [utf-16le 0 unicad-ucs2le-prober] [utf-16be 0 unicad-ucs2be-prober]))) nil [21134 21629]) ("unicad-multibyte-group-prober" function (:arguments ("start" "end")) nil [21631 22760]) ("unicad-cjk-prober" function (:arguments ("start" "end" "chardet" "model" "dist-table" "dist-ratio" "analyser")) nil [22762 24926]) ("unicad-utf8-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-utf8-prober))) nil [24953 25043]) ("unicad-utf8-prober" function (:arguments ("start" "end")) nil [25045 26444]) ("unicad-utf8-get-confidence" function (:arguments ("mNumOfMBChar")) nil [26446 26746]) ("unicad-ucs2be-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-ucs2be-prober))) nil [26787 26881]) ("unicad-ucs2be-prober" function (:arguments ("start" "end")) nil [26883 28026]) ("unicad-ucs2le-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-ucs2le-prober))) nil [28028 28122]) ("unicad-ucs2le-prober" function (:arguments ("start" "end")) nil [28124 29267]) ("unicad-ucs2be-class-table" variable (:constant-flag t :default-value [0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 5]) nil [29403 30440]) ("unicad-ucs2be-state-table" variable (:constant-flag t :default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector 5 7 7 eError 4 3 eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe 6 6 6 6 eError eError 6 6 6 6 6 eItsMe 6 6 6 6 6 6 5 7 7 eError 5 8 6 6 eError 6 6 6 6 6 6 6 eError eError eStart eStart))) nil [30443 31042]) ("unicad-ucs2be-charlen-table" variable (:constant-flag t :default-value [2 2 2 0 2 2]) nil [31044 31103]) ("unicad-ucs2be-sm-model" variable (:default-value (list (cons (quote classTable) unicad-ucs2be-class-table) (cons (quote classFactor) 6) (cons (quote stateTable) unicad-ucs2be-state-table) (cons (quote charLenTable) unicad-ucs2be-charlen-table) (cons (quote name) "UTF-16-BE"))) nil [31105 31346]) ("unicad-ucs2le-class-table" variable (:constant-flag t :default-value [0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 5]) nil [31348 32385]) ("unicad-ucs2le-state-table" variable (:constant-flag t :default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector 6 6 7 6 4 3 eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe 5 5 5 eError eItsMe eError 5 5 5 eError 5 eError 6 6 7 6 8 8 5 5 5 eError 5 5 5 eError eError eError 5 5 5 5 5 eError 5 eError eStart eStart))) nil [32388 32987]) ("unicad-ucs2le-charlen-table" variable (:constant-flag t :default-value [2 2 2 2 2 2]) nil [32989 33048]) ("unicad-ucs2le-sm-model" variable (:default-value (list (cons (quote classTable) unicad-ucs2le-class-table) (cons (quote classFactor) 6) (cons (quote stateTable) unicad-ucs2le-state-table) (cons (quote charLenTable) unicad-ucs2le-charlen-table) (cons (quote name) "UTF-16-LE"))) nil [33050 33291]) ("unicad-gb2312-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-gb2312-prober))) nil [33321 33415]) ("unicad-gb2312-dist-table" variable (:default-value (quote (0 . 0))) nil [33416 33458]) ("unicad-gb2312-prober" function (:arguments ("start" "end")) nil [33460 33690]) ("unicad-gb2312-analyser" function (:arguments ("ch0" "ch1")) nil [33692 34301]) ("unicad-gbkcht-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-gbkcht-prober))) nil [34378 34472]) ("unicad-big5-dist-table" variable (:default-value (quote (0 . 0))) nil [34473 34513]) ("unicad-gbkcht-prober" function (:arguments ("start" "end")) nil [34514 34740]) ("unicad-gbkcht-analyser" function (:arguments ("ch0" "ch1")) nil [34743 35131]) ("unicad-big5-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-big5-prober))) nil [35160 35250]) ("unicad-big5-dist-table" variable (:default-value (quote (0 . 0))) nil [35251 35291]) ("unicad-big5-prober" function (:arguments ("start" "end")) nil [35292 35509]) ("unicad-big5-analyser" function (:arguments ("ch0" "ch1")) nil [35511 36201]) ("unicad-sjis-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-sjis-prober))) nil [36229 36319]) ("unicad-sjis-dist-table" variable (:default-value (quote (0 . 0))) nil [36320 36360]) ("unicad-sjis-prober" function (:arguments ("start" "end")) nil [36361 36577]) ("unicad-sjis-analyser" function (:arguments ("ch0" "ch1")) nil [36579 37456]) ("unicad-eucjp-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-eucjp-prober))) nil [37485 37577]) ("unicad-eucjp-dist-table" variable (:default-value (quote (0 . 0))) nil [37578 37619]) ("unicad-eucjp-prober" function (:arguments ("start" "end")) nil [37620 37841]) ("unicad-eucjp-analyser" function (:arguments ("ch0" "ch1")) nil [37843 38423]) ("unicad-euckr-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-euckr-prober))) nil [38452 38544]) ("unicad-euckr-dist-table" variable (:default-value (quote (0 . 0))) nil [38545 38586]) ("unicad-euckr-prober" function (:arguments ("start" "end")) nil [38587 38808]) ("unicad-euckr-analyser" function (:arguments ("ch0" "ch1")) nil [38810 39395]) ("unicad-euctw-list" variable (:default-value (unicad-chardet unicad-multibyte-group-list (quote unicad-euctw-prober))) nil [39424 39516]) ("unicad-euctw-dist-table" variable (:default-value (quote (0 . 0))) nil [39517 39558]) ("unicad-euctw-prober" function (:arguments ("start" "end")) nil [39559 39782]) ("unicad-euctw-analyser" function (:arguments ("ch0" "ch1")) nil [39784 40369]) ("unicad-latin-best-guess" variable (:default-value (quote (windows-1252 0.0))) nil [40399 40451]) ("unicad-latin1-guess" variable (:default-value (quote (windows-1252 0.0))) nil [40453 40503]) ("unicad-latin2-guess" variable (:default-value (quote (latin-2 0.0))) nil [40505 40550]) ("unicad-latin-group-prober" function (:arguments ("start" "end")) nil [40552 41359]) ("unicad-latin-prober" function (:arguments ("start" "end" "class-table" "class-num" "latin-model")) nil [41361 42343]) ("unicad-latin-get-confidence" function (:arguments ("mState" "mFreqCounter")) nil [42345 42767]) ("unicad-sm-coding-state" variable nil nil [42808 42920]) ("unicad--eStart" variable (:constant-flag t) nil [42922 42949]) ("unicad--eError" variable (:constant-flag t :default-value 1) nil [42950 42977]) ("unicad--eItsMe" variable (:constant-flag t :default-value 2) nil [42978 43005]) ("unicad-sm-reset" function nil nil [43007 43190]) ("unicad-sm-set" function (:arguments ("name" "value")) nil [43192 43282]) ("unicad-sm-get" function (:arguments ("name")) nil [43284 43395]) ("unicad-next-state" function (:arguments ("ch" "model")) nil [43397 44295]) ("unicad-utf8-class-table" variable (:default-value (\` [1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 0 0 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 8 8 8 8 8 8 8 8 8 8 8 8 9 8 8 10 11 11 11 11 11 11 11 12 13 13 13 14 15 0 0])) nil [44330 45731]) ("unicad-utf8-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eError eStart eError eError eError eError 12 10 9 11 8 7 6 5 4 3 eError eError eError eError eError eError eError eError eError eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError 5 5 5 5 eError eError eError eError eError eError eError eError eError eError eError eError eError 5 5 5 eError eError eError eError eError eError eError eError eError eError eError eError 7 7 7 7 eError eError eError eError eError eError eError eError eError eError eError eError eError eError 7 7 eError eError eError eError eError eError eError eError eError eError eError eError 9 9 9 9 eError eError eError eError eError eError eError eError eError eError eError eError eError eError eError 9 eError eError eError eError eError eError eError eError eError eError eError eError 12 12 12 12 eError eError eError eError eError eError eError eError eError eError eError eError eError eError eError 12 eError eError eError eError eError eError eError eError eError eError eError eError 12 12 12 eError eError eError eError eError eError eError eError eError eError eError eError eError eStart eStart eStart eStart eError eError eError eError eError eError eError eError eError eError))) nil [45734 47752]) ("unicad-utf8-charlen-table" variable (:default-value [0 1 0 0 0 0 2 3 3 3 4 4 5 5 6 6]) nil [47754 47868]) ("unicad-utf8-sm-model" variable (:default-value (list (cons (quote classTable) unicad-utf8-class-table) (cons (quote classFactor) 16) (cons (quote stateTable) unicad-utf8-state-table) (cons (quote charLenTable) unicad-utf8-charlen-table) (cons (quote name) (quote utf-8)))) nil [47870 48099]) ("unicad-gb18030-class-table" variable (:default-value [1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 0]) nil [48137 49390]) ("unicad-gb18030-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eError eStart eStart eStart eStart eStart 3 eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eStart 4 eError eStart eStart eError eError eError eError eError eError 5 eError eError eError eItsMe eError eError eError))) nil [49392 49877]) ("unicad-gb18030-charlen-table" variable (:default-value [0 1 1 1 1 1 2]) nil [50155 50220]) ("unicad-gb18030-sm-model" variable (:default-value (list (cons (quote classTable) unicad-gb18030-class-table) (cons (quote classFactor) 7) (cons (quote stateTable) unicad-gb18030-state-table) (cons (quote charLenTable) unicad-gb18030-charlen-table) (cons (quote name) (quote gb18030)))) nil [50222 50469]) ("unicad-big5-class-table" variable (:default-value (\` [1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0])) nil [50503 51735]) ("unicad-big5-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eError eStart eStart 3 eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eStart eStart eStart))) nil [51737 52046]) ("unicad-big5-charlen-table" variable (:default-value [0 1 1 2 0]) nil [52048 52100]) ("unicad-big5-sm-model" variable (:default-value (list (cons (quote classTable) unicad-big5-class-table) (cons (quote classFactor) 5) (cons (quote stateTable) unicad-big5-state-table) (cons (quote charLenTable) unicad-big5-charlen-table) (cons (quote name) (quote big5)))) nil [52102 52334]) ("unicad-sjis-class-table" variable (:default-value (\` [1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 0 0 0])) nil [52367 53787]) ("unicad-sjis-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eError eStart eStart 3 eError eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eStart eStart eStart eStart))) nil [53790 54107]) ("unicad-sjis-charlen-table" variable (:default-value [0 1 1 2 0 0]) nil [54109 54164]) ("unicad-sjis-sm-model" variable (:default-value (list (cons (quote classTable) unicad-sjis-class-table) (cons (quote classFactor) 6) (cons (quote stateTable) unicad-sjis-state-table) (cons (quote charLenTable) unicad-sjis-charlen-table) (cons (quote name) (quote sjis)))) nil [54166 54398]) ("unicad-eucjp-class-table" variable (:default-value (\` [4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 4 4 4 4 4 4 4 4 4 4 4 5 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 1 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5])) nil [54434 55721]) ("unicad-eucjp-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector 3 4 3 5 eStart eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eStart eError eStart eError eError eError eError eError eStart eError eError eError 3 eError 3 eError eError eError))) nil [55723 56152]) ("unicad-eucjp-charlen-table" variable (:default-value [2 2 2 3 1 0]) nil [56154 56210]) ("unicad-eucjp-sm-model" variable (:default-value (list (cons (quote classTable) unicad-eucjp-class-table) (cons (quote classFactor) 6) (cons (quote stateTable) unicad-eucjp-state-table) (cons (quote charLenTable) unicad-eucjp-charlen-table) (cons (quote name) (quote euc-jp)))) nil [56212 56450]) ("unicad-euckr-class-table" variable (:default-value (\` [1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0])) nil [56485 57787]) ("unicad-euckr-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eError eStart 3 eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eError eError eStart eStart))) nil [57789 58054]) ("unicad-euckr-charlen-table" variable (:default-value [0 1 2 0]) nil [58056 58106]) ("unicad-euckr-sm-model" variable (:default-value (list (cons (quote classTable) unicad-euckr-class-table) (cons (quote classFactor) 4) (cons (quote stateTable) unicad-euckr-state-table) (cons (quote charLenTable) unicad-euckr-charlen-table) (cons (quote name) (quote euc-kr)))) nil [58108 58346]) ("unicad-euctw-class-table" variable (:default-value (\` [2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 4 4 4 4 4 4 5 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0])) nil [58381 59681]) ("unicad-euctw-state-table" variable (:default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eError eError eStart 3 3 3 4 eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eStart eError eStart eStart eStart eError eError eError eError eError 5 eError eError eError eStart eError eStart eStart eStart eError))) nil [59683 60156]) ("unicad-euctw-charlen-table" variable (:default-value [0 0 1 2 2 2 3]) nil [60158 60221]) ("unicad-euctw-sm-model" variable (:default-value (list (cons (quote classTable) unicad-euctw-class-table) (cons (quote classFactor) 7) (cons (quote stateTable) unicad-euctw-state-table) (cons (quote charLenTable) unicad-euctw-charlen-table) (cons (quote name) (quote euc-tw)))) nil [60223 60462]) ("unicad-latin1-class-num" variable (:default-value 9) nil [60498 60533]) ("unicad-latin1-class-table" variable (:default-value (let ((UDF 0) (OTH 1) (ASC 2) (ASS 3) (ACV 4) (ACO 5) (ASV 6) (ASO 7) (OTS 8)) (vector OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC OTH OTH OTH OTH OTH OTH ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS OTH OTH OTH OTH OTH OTH UDF OTH ASO OTH OTH OTH OTH OTH OTH ACO OTH ACO UDF ACO UDF UDF OTH OTH OTH OTH OTH OTH OTH OTH OTH ASO OTH ASO UDF ASO ACO OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS OTS ACV ACV ACV ACV ACV ACV ACO ACO ACV ACV ACV ACV ACV ACV ACV ACV ACO ACO ACV ACV ACV ACV ACV OTS ACV ACV ACV ACV ACV ACO ACO ASO ASV ASV ASV ASV ASV ASV ASO ASO ASV ASV ASV ASV ASV ASV ASV ASV ASO ASO ASV ASV ASV ASV ASV OTS ASV ASV ASV ASV ASV ASO ASO ASO))) nil [60553 62707]) ("unicad-latin1-model" variable (:default-value [0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 3 3 3 3 3 3 3 2 0 3 3 3 1 1 3 3 2 0 3 3 3 1 2 1 2 1 0 3 3 3 3 3 3 3 1 0 3 1 3 1 1 1 3 1 0 3 1 3 1 1 3 3 1 0 3 2 2 2 2 1 1 1]) nil [62709 63191]) ("unicad-esc-group-list" variable (:default-value (list (quote unicad-hz-prober) (quote unicad-iso2022cn-prober) (quote unicad-iso2022jp-prober) (quote unicad-iso2022kr-prober))) nil [63226 63370]) ("unicad-esc-group-guess" variable nil nil [63372 63407]) ("unicad-esc-group-prober" function (:arguments ("start" "end")) nil [63409 64000]) ("unicad-hz-name" variable (:default-value (quote hz-gb-2312)) nil [64002 64037]) ("unicad-iso2022cn-name" variable (:default-value (quote iso-2022-cn)) nil [64038 64081]) ("unicad-iso2022jp-name" variable (:default-value (quote iso-2022-jp)) nil [64082 64125]) ("unicad-iso2022kr-name" variable (:default-value (quote iso-2022-kr)) nil [64126 64169]) ("unicad-hz-prober" function (:arguments ("start" "end")) nil [64171 64287]) ("unicad-iso2022cn-prober" function (:arguments ("start" "end")) nil [64289 64426]) ("unicad-iso2022jp-prober" function (:arguments ("start" "end")) nil [64428 64565]) ("unicad-iso2022kr-prober" function (:arguments ("start" "end")) nil [64567 64704]) ("unicad-esc-charset-prober" function (:arguments ("start" "end" "charset-name" "model")) nil [64706 65443]) ("unicad-latin2-class-num" variable (:default-value 9) nil [65467 65501]) ("unicad-latin2-class-table" variable (:default-value (let ((UDF 0) (OTH 1) (ASC 2) (ASS 3) (ACV 4) (ACO 5) (ASV 6) (ASO 7) (OTS 8)) (vector OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH OTH ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC ASC OTH OTH OTH OTH OTH OTH ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS ASS OTH OTH OTH OTH OTH OTH UDF OTH ASO OTH OTH OTH OTH OTH OTH ACO OTH ACO UDF ACO UDF UDF OTH OTH OTH OTH OTH OTH OTH OTH OTH ASO OTH ASO UDF ASO ACO OTS ACV OTS ACO OTS ACO ACO OTS OTS ACO ACO ACO ACO OTS ACO ACO OTS ASV OTS ASO OTS ASO ASO OTS OTS ASO ASO ASO ASO OTS ASO ASO ACO ACV ACV ACV ACV ACO ACO ACO ACO ACV ACV ACV ACV ACV ACV ACO ACO ACO ACO ACV ACV ACV ACV OTS ACO ACV ACV ACV ACV ACO ACO ASO ASO ASV ASV ASV ASV ASO ASO ASO ASO ASV ASV ASV ASV ASV ASV ASO ASO ASO ASO ASV ASV ASV ASV OTS ASO ASV ASV ASV ASV ASO ASO OTS))) nil [65522 67675]) ("unicad-latin2-model" variable (:default-value [0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 3 3 3 3 3 3 3 2 0 3 3 3 1 1 3 3 2 0 3 3 3 1 2 1 2 1 0 3 3 3 3 3 3 3 1 0 3 1 3 1 1 1 3 1 0 3 1 3 1 1 3 3 1 0 3 2 2 2 2 1 1 1]) nil [67677 68159]) ("unicad-dist-table-reset" function (:arguments ("dist-table")) nil [68197 68292]) ("defalias" code nil nil [68294 68340]) ("defalias" code nil nil [68341 68386]) ("unicad-dist-table-total-chars++" function (:arguments ("dist-table")) nil [68388 68487]) ("unicad-dist-table-freq-chars++" function (:arguments ("dist-table")) nil [68488 68586]) ("unicad-dist-table-get-confidence" function (:arguments ("dist-table" "dist-ratio" "size" "&optional" "prefer")) nil [68588 69363]) ("unicad-gb2312-table-size" variable (:default-value 3760) nil [69403 69441]) ("unicad-gb2312-dist-ratio" variable (:default-value 0.9) nil [69442 69479]) ("unicad-gb2312-char-freq-order" variable (:default-valuenil [69480 88962]) ("unicad-big5-table-size" variable (:default-value 5376) nil [88992 89028]) ("unicad-big5-dist-ratio" variable (:default-value 0.75) nil [89029 89065]) ("unicad-big5-char-freq-order" variable (:default-valuenil [89066 115986]) ("unicad-jis-dist-ratio" variable (:default-value 3.0) nil [116668 116702]) ("unicad-jis-table-size" variable (:default-value 4368) nil [116703 116739]) ("unicad-jis-char-freq-order" variable (:default-valuenil [116740 138619]) ("unicad-euckr-dist-ratio" variable (:default-value 6.0) nil [139186 139223]) ("unicad-euckr-table-size" variable (:default-value 2352) nil [139224 139262]) ("unicad-euckr-char-freq-order" variable (:default-value [13 130 120 1396 481 1719 1720 328 609 212 1721 707 400 299 1722 87 1397 1723 104 536 1117 1203 1724 1267 685 1268 508 1725 1726 1727 1728 1398 1399 1729 1730 1731 141 621 326 1057 368 1732 267 488 20 1733 1269 1734 945 1400 1735 47 904 1270 1736 1737 773 248 1738 409 313 786 429 1739 116 987 813 1401 683 75 1204 145 1740 1741 1742 1743 16 847 667 622 708 1744 1745 1746 966 787 304 129 1747 60 820 123 676 1748 1749 1750 1751 617 1752 626 1753 1754 1755 1756 653 1757 1758 1759 1760 1761 1762 856 344 1763 1764 1765 1766 89 401 418 806 905 848 1767 1768 1769 946 1205 709 1770 1118 1771 241 1772 1773 1774 1271 1775 569 1776 999 1777 1778 1779 1780 337 751 1058 28 628 254 1781 177 906 270 349 891 1079 1782 19 1783 379 1784 315 1785 629 754 1402 559 1786 636 203 1206 1787 710 567 1788 935 814 1789 1790 1207 766 528 1791 1792 1208 1793 1794 1795 1796 1797 1403 1798 1799 533 1059 1404 1405 1156 1406 936 884 1080 1800 351 1801 1802 1803 1804 1805 801 1806 1807 1808 1119 1809 1157 714 474 1407 1810 298 899 885 1811 1120 802 1158 1812 892 1813 1814 1408 659 1815 1816 1121 1817 1818 1819 1820 1821 1822 319 1823 594 545 1824 815 937 1209 1825 1826 573 1409 1022 1827 1210 1828 1829 1830 1831 1832 1833 556 722 807 1122 1060 1834 697 1835 900 557 715 1836 1410 540 1411 752 1159 294 597 1211 976 803 770 1412 1837 1838 39 794 1413 358 1839 371 925 1840 453 661 788 531 723 544 1023 1081 869 91 1841 392 430 790 602 1414 677 1082 457 1415 1416 1842 1843 475 327 1024 1417 795 121 1844 733 403 1418 1845 1846 1847 300 119 711 1212 627 1848 1272 207 1849 1850 796 1213 382 1851 519 1852 1083 893 1853 1854 1855 367 809 487 671 1856 663 1857 1858 956 471 306 857 1859 1860 1160 1084 1861 1862 1863 1864 1865 1061 1866 1867 1868 1869 1870 1871 282 96 574 1872 502 1085 1873 1214 1874 907 1875 1876 827 977 1419 1420 1421 268 1877 1422 1878 1879 1880 308 1881 2 537 1882 1883 1215 1884 1885 127 791 1886 1273 1423 1887 34 336 404 643 1888 571 654 894 840 1889 0 886 1274 122 575 260 908 938 1890 1275 410 316 1891 1892 100 1893 1894 1123 48 1161 1124 1025 1895 633 901 1276 1896 1897 115 816 1898 317 1899 694 1900 909 734 1424 572 866 1425 691 85 524 1010 543 394 841 1901 1902 1903 1026 1904 1905 1906 1907 1908 1909 30 451 651 988 310 1910 1911 1426 810 1216 93 1912 1913 1277 1217 1914 858 759 45 58 181 610 269 1915 1916 131 1062 551 443 1000 821 1427 957 895 1086 1917 1918 375 1919 359 1920 687 1921 822 1922 293 1923 1924 40 662 118 692 29 939 887 640 482 174 1925 69 1162 728 1428 910 1926 1278 1218 1279 386 870 217 854 1163 823 1927 1928 1929 1930 834 1931 78 1932 859 1933 1063 1934 1935 1936 1937 438 1164 208 595 1938 1939 1940 1941 1219 1125 1942 280 888 1429 1430 1220 1431 1943 1944 1945 1946 1947 1280 150 510 1432 1948 1949 1950 1951 1952 1953 1954 1011 1087 1955 1433 1043 1956 881 1957 614 958 1064 1065 1221 1958 638 1001 860 967 896 1434 989 492 553 1281 1165 1959 1282 1002 1283 1222 1960 1961 1962 1963 36 383 228 753 247 454 1964 876 678 1965 1966 1284 126 464 490 835 136 672 529 940 1088 1435 473 1967 1968 467 50 390 227 587 279 378 598 792 968 240 151 160 849 882 1126 1285 639 1044 133 140 288 360 811 563 1027 561 142 523 1969 1970 1971 7 103 296 439 407 506 634 990 1972 1973 1974 1975 645 1976 1977 1978 1979 1980 1981 236 1982 1436 1983 1984 1089 192 828 618 518 1166 333 1127 1985 818 1223 1986 1987 1988 1989 1990 1991 1992 1993 342 1128 1286 746 842 1994 1995 560 223 1287 98 8 189 650 978 1288 1996 1437 1997 17 345 250 423 277 234 512 226 97 289 42 167 1998 201 1999 2000 843 836 824 532 338 783 1090 182 576 436 1438 1439 527 500 2001 947 889 2002 2003 2004 2005 262 600 314 447 2006 547 2007 693 738 1129 2008 71 1440 745 619 688 2009 829 2010 2011 147 2012 33 948 2013 2014 74 224 2015 61 191 918 399 637 2016 1028 1130 257 902 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 837 2027 2028 2029 2030 179 874 591 52 724 246 2031 2032 2033 2034 1167 969 2035 1289 630 605 911 1091 1168 2036 2037 2038 1441 912 2039 623 2040 2041 253 1169 1290 2042 1442 146 620 611 577 433 2043 1224 719 1170 959 440 437 534 84 388 480 1131 159 220 198 679 2044 1012 819 1066 1443 113 1225 194 318 1003 1029 2045 2046 2047 2048 1067 2049 2050 2051 2052 2053 59 913 112 2054 632 2055 455 144 739 1291 2056 273 681 499 2057 448 2058 2059 760 2060 2061 970 384 169 245 1132 2062 2063 414 1444 2064 2065 41 235 2066 157 252 877 568 919 789 580 2067 725 2068 2069 1292 2070 2071 1445 2072 1446 2073 2074 55 588 66 1447 271 1092 2075 1226 2076 960 1013 372 2077 2078 2079 2080 2081 1293 2082 2083 2084 2085 850 2086 2087 2088 2089 2090 186 2091 1068 180 2092 2093 2094 109 1227 522 606 2095 867 1448 1093 991 1171 926 353 1133 2096 581 2097 2098 2099 1294 1449 1450 2100 596 1172 1014 1228 2101 1451 1295 1173 1229 2102 2103 1296 1134 1452 949 1135 2104 2105 1094 1453 1454 1455 2106 1095 2107 2108 2109 2110 2111 2112 2113 2114 2115 2116 2117 804 2118 2119 1230 1231 805 1456 405 1136 2120 2121 2122 2123 2124 720 701 1297 992 1457 927 1004 2125 2126 2127 2128 2129 2130 22 417 2131 303 2132 385 2133 971 520 513 2134 1174 73 1096 231 274 962 1458 673 2135 1459 2136 152 1137 2137 2138 2139 2140 1005 1138 1460 1139 2141 2142 2143 2144 11 374 844 2145 154 1232 46 1461 2146 838 830 721 1233 106 2147 90 428 462 578 566 1175 352 2148 2149 538 1234 124 1298 2150 1462 761 565 2151 686 2152 649 2153 72 173 2154 460 415 2155 1463 2156 1235 305 2157 2158 2159 2160 2161 2162 579 2163 2164 2165 2166 2167 747 2168 2169 2170 2171 1464 669 2172 2173 2174 2175 2176 1465 2177 23 530 285 2178 335 729 2179 397 2180 2181 2182 1030 2183 2184 698 2185 2186 325 2187 2188 369 2189 799 1097 1015 348 2190 1069 680 2191 851 1466 2192 2193 10 2194 613 424 2195 979 108 449 589 27 172 81 1031 80 774 281 350 1032 525 301 582 1176 2196 674 1045 2197 2198 1467 730 762 2199 2200 2201 2202 1468 2203 993 2204 2205 266 1070 963 1140 2206 2207 2208 664 1098 972 2209 2210 2211 1177 1469 1470 871 2212 2213 2214 2215 2216 1471 2217 2218 2219 2220 2221 2222 2223 2224 2225 2226 2227 1472 1236 2228 2229 2230 2231 2232 2233 2234 2235 1299 2236 2237 200 2238 477 373 2239 2240 731 825 777 2241 2242 2243 521 486 548 2244 2245 2246 1473 1300 53 549 137 875 76 158 2247 1301 1474 469 396 1016 278 712 2248 321 442 503 767 744 941 1237 1178 1475 2249 82 178 1141 1179 973 2250 1302 2251 297 2252 2253 570 2254 2255 2256 18 450 206 2257 290 292 1142 2258 511 162 99 346 164 735 2259 1476 1477 4 554 343 798 1099 2260 1100 2261 43 171 1303 139 215 2262 2263 717 775 2264 1033 322 216 2265 831 2266 149 2267 1304 2268 2269 702 1238 135 845 347 309 2270 484 2271 878 655 238 1006 1478 2272 67 2273 295 2274 2275 461 2276 478 942 412 2277 1034 2278 2279 2280 265 2281 541 2282 2283 2284 2285 2286 70 852 1071 2287 2288 2289 2290 21 56 509 117 432 2291 2292 331 980 552 1101 148 284 105 393 1180 1239 755 2293 187 2294 1046 1479 2295 340 2296 63 1047 230 2297 2298 1305 763 1306 101 800 808 494 2299 2300 2301 903 2302 37 1072 14 5 2303 79 675 2304 312 2305 2306 2307 2308 2309 1480 6 1307 2310 2311 2312 1 470 35 24 229 2313 695 210 86 778 15 784 592 779 32 77 855 964 2314 259 2315 501 380 2316 2317 83 981 153 689 1308 1481 1482 1483 2318 2319 716 1484 2320 2321 2322 2323 2324 2325 1485 2326 2327 128 57 68 261 1048 211 170 1240 31 2328 51 435 742 2329 2330 2331 635 2332 264 456 2333 2334 2335 425 2336 1486 143 507 263 943 2337 363 920 1487 256 1488 1102 243 601 1489 2338 2339 2340 2341 2342 2343 2344 861 2345 2346 2347 2348 2349 2350 395 2351 1490 1491 62 535 166 225 2352 2353 668 419 1241 138 604 928 2354 1181 2355 1492 1493 2356 2357 2358 1143 2359 696 2360 387 307 1309 682 476 2361 2362 332 12 222 156 2363 232 2364 641 276 656 517 1494 1495 1035 416 736 1496 2365 1017 586 2366 2367 2368 1497 2369 242 2370 2371 2372 1498 2373 965 713 2374 2375 2376 2377 740 982 1499 944 1500 1007 2378 2379 1310 1501 2380 2381 2382 785 329 2383 2384 1502 2385 2386 2387 932 2388 1503 2389 2390 2391 2392 1242 2393 2394 2395 2396 2397 994 950 2398 2399 2400 2401 1504 1311 2402 2403 2404 2405 1049 749 2406 2407 853 718 1144 1312 2408 1182 1505 2409 2410 255 516 479 564 550 214 1506 1507 1313 413 239 444 339 1145 1036 1508 1509 1314 1037 1510 1315 2411 1511 2412 2413 2414 176 703 497 624 593 921 302 2415 341 165 1103 1512 2416 1513 2417 2418 2419 376 2420 700 2421 2422 2423 258 768 1316 2424 1183 2425 995 608 2426 2427 2428 2429 221 2430 2431 2432 2433 2434 2435 2436 2437 195 323 726 188 897 983 1317 377 644 1050 879 2438 452 2439 2440 2441 2442 2443 2444 914 2445 2446 2447 2448 915 489 2449 1514 1184 2450 2451 515 64 427 495 2452 583 2453 483 485 1038 562 213 1515 748 666 2454 2455 2456 2457 334 2458 780 996 1008 705 1243 2459 2460 2461 2462 2463 114 2464 493 1146 366 163 1516 961 1104 2465 291 2466 1318 1105 2467 1517 365 2468 355 951 1244 2469 1319 2470 631 2471 2472 218 1320 364 320 756 1518 1519 1321 1520 1322 2473 2474 2475 2476 997 2477 2478 2479 2480 665 1185 2481 916 1521 2482 2483 2484 584 684 2485 2486 797 2487 1051 1186 2488 2489 2490 1522 2491 2492 370 2493 1039 1187 65 2494 434 205 463 1188 2495 125 812 391 402 826 699 286 398 155 781 771 585 2496 590 505 1073 2497 599 244 219 917 1018 952 646 1523 2498 1323 2499 2500 49 984 354 741 2501 625 2502 1324 2503 1019 190 357 757 491 95 782 868 2504 2505 2506 2507 2508 2509 134 1524 1074 422 1525 898 2510 161 2511 2512 2513 2514 769 2515 1526 2516 2517 411 1325 2518 472 1527 2519 2520 2521 2522 2523 2524 985 2525 2526 2527 2528 2529 2530 764 2531 1245 2532 2533 25 204 311 2534 496 2535 1052 2536 2537 2538 2539 2540 2541 2542 199 704 504 468 758 657 1528 196 44 839 1246 272 750 2543 765 862 2544 2545 1326 2546 132 615 933 2547 732 2548 2549 2550 1189 1529 2551 283 1247 1053 607 929 2552 2553 2554 930 183 872 616 1040 1147 2555 1148 1020 441 249 1075 2556 2557 2558 466 743 2559 2560 2561 92 514 426 420 526 2562 2563 2564 2565 2566 2567 2568 185 2569 2570 2571 2572 776 1530 658 2573 362 2574 361 922 1076 793 2575 2576 2577 2578 2579 2580 1531 251 2581 2582 2583 2584 1532 54 612 237 1327 2585 2586 275 408 647 111 2587 1533 1106 465 3 458 9 38 2588 107 110 890 209 26 737 498 2589 1534 2590 431 202 88 1535 356 287 1107 660 1149 2591 381 1536 986 1150 445 1248 1151 974 2592 2593 846 2594 446 953 184 1249 1250 727 2595 923 193 883 2596 2597 2598 102 324 539 817 2599 421 1041 2600 832 2601 94 175 197 406 2602 459 2603 2604 2605 2606 2607 330 555 2608 2609 2610 706 1108 389 2611 2612 2613 2614 233 2615 833 558 931 954 1251 2616 2617 1537 546 2618 2619 1009 2620 2621 2622 1538 690 1328 2623 955 2624 1539 2625 2626 772 2627 2628 2629 2630 2631 924 648 863 603 2632 2633 934 1540 864 865 2634 642 1042 670 1190 2635 2636 2637 2638 168 2639 652 873 542 1054 1541 2640 2641 2642]) nil [139263 151064]) ("unicad-euctw-dist-ratio" variable (:default-value 0.75) nil [151704 151741]) ("unicad-euctw-table-size" variable (:default-value 8102) nil [151742 151780]) ("unicad-euctw-char-freq-order" variable (:default-valuenil [151781 178702]) ("unicad-latin7-char2order-map" variable (:default-value [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 82 100 104 94 98 101 116 102 111 187 117 92 88 113 85 79 118 105 83 67 114 119 95 99 109 188 253 253 253 253 253 253 72 70 80 81 60 96 93 89 68 120 97 77 86 69 55 78 115 65 66 58 76 106 103 87 107 112 253 253 253 253 253 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 233 90 253 253 253 253 253 253 253 253 253 253 74 253 253 253 253 253 253 247 248 61 36 46 71 73 253 54 253 108 123 110 31 51 43 41 34 91 40 52 47 44 53 38 49 59 39 35 48 250 37 33 45 56 50 84 57 120 121 17 18 22 15 124 1 29 20 21 3 32 13 25 5 11 16 10 6 30 4 9 8 14 7 2 12 28 23 42 24 64 75 19 26 27 253]) nil [179059 180252]) ("unicad-win1253-char2order-map" variable (:default-value [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 82 100 104 94 98 101 116 102 111 187 117 92 88 113 85 79 118 105 83 67 114 119 95 99 109 188 253 253 253 253 253 253 72 70 80 81 60 96 93 89 68 120 97 77 86 69 55 78 115 65 66 58 76 106 103 87 107 112 253 253 253 253 253 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 233 61 253 253 253 253 253 253 253 253 253 253 74 253 253 253 253 253 253 247 253 253 36 46 71 73 253 54 253 108 123 110 31 51 43 41 34 91 40 52 47 44 53 38 49 59 39 35 48 250 37 33 45 56 50 84 57 120 121 17 18 22 15 124 1 29 20 21 3 32 13 25 5 11 16 10 6 30 4 9 8 14 7 2 12 28 23 42 24 64 75 19 26 27 253]) nil [180256 181450]) ("unicad-greek-lang-model" variable (:default-value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 2 3 3 3 3 3 3 3 3 1 3 3 3 0 2 2 3 3 0 3 0 3 2 0 3 3 3 0 3 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 0 3 3 0 3 2 3 3 0 3 2 3 3 3 0 0 3 0 3 0 3 3 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 3 2 2 3 3 3 3 3 3 3 3 0 3 3 3 3 0 2 3 3 0 3 3 3 3 2 3 3 3 0 2 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 0 2 1 3 3 3 3 2 3 3 2 3 3 2 0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 0 3 3 3 3 3 3 0 3 3 0 3 3 3 3 3 3 3 3 3 3 0 3 2 3 3 0 2 0 1 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 3 0 0 0 0 3 3 0 3 1 3 3 3 0 3 3 0 3 3 3 3 0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 0 3 0 3 3 3 3 3 0 3 2 2 2 3 0 2 3 3 3 3 3 2 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 2 2 3 3 3 3 0 3 1 3 3 3 3 2 3 3 3 3 3 3 3 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 0 3 0 0 0 3 3 2 3 3 3 3 3 0 0 3 2 3 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 3 3 3 0 0 3 3 0 2 3 0 3 0 3 3 3 0 0 3 0 3 0 2 2 3 3 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 0 3 2 3 3 3 3 0 3 3 3 3 3 0 3 3 2 3 2 3 3 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 2 3 2 3 3 3 3 3 3 0 2 3 2 3 2 2 2 3 2 3 3 2 3 0 2 2 2 3 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 3 3 2 3 3 0 0 3 0 3 0 0 0 3 2 0 3 0 3 0 0 2 0 2 0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 0 3 3 3 3 3 3 0 3 3 0 3 0 0 0 3 3 0 3 3 3 0 0 1 2 3 0 3 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 0 0 3 2 2 3 3 0 3 3 3 3 3 2 1 3 0 3 2 3 3 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 2 3 3 3 3 3 3 0 0 3 0 3 0 0 0 3 3 0 3 2 3 0 0 3 3 3 0 3 0 0 0 2 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 0 3 3 3 3 3 3 0 0 3 0 3 0 0 0 3 2 0 3 2 3 0 0 3 2 3 0 2 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 2 2 3 3 3 3 3 3 0 2 3 0 3 0 0 0 3 3 0 3 0 2 0 0 2 3 1 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 3 3 3 0 3 0 3 3 2 3 0 3 3 3 3 3 3 0 3 3 3 0 2 3 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 3 3 0 0 3 0 0 0 3 3 0 3 0 2 3 3 0 0 3 0 3 0 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 3 3 3 3 3 0 0 3 0 2 0 0 0 3 3 0 3 0 3 0 0 2 0 2 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 0 3 0 2 0 3 2 0 3 2 3 2 3 0 0 3 2 3 2 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 3 3 3 3 3 0 0 0 3 0 2 1 0 0 3 2 2 2 0 3 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 3 3 2 0 3 0 3 0 3 3 0 2 1 2 3 3 0 0 3 0 3 0 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 3 0 3 3 3 3 3 3 0 2 3 0 3 0 0 0 2 1 0 2 2 3 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 2 3 3 3 2 3 0 0 1 3 0 2 0 0 0 0 3 0 1 0 2 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 1 0 3 0 0 0 3 2 0 3 2 3 3 3 0 0 3 0 3 2 2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 3 3 0 0 3 0 0 0 0 2 0 2 3 3 2 2 2 2 3 0 2 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 2 0 0 0 0 0 0 2 3 0 2 0 2 3 2 0 0 3 0 3 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 3 2 2 3 0 2 0 3 0 0 0 2 0 0 0 0 1 2 0 2 0 2 0 0 2 0 2 0 2 2 0 0 1 0 2 2 2 0 2 2 2 0 2 2 2 0 0 2 0 0 1 0 0 0 0 0 2 0 3 3 2 0 0 0 0 0 0 1 3 0 2 0 2 2 2 0 0 2 0 3 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 3 2 0 2 2 0 2 0 2 2 0 2 0 2 2 2 0 0 0 0 0 0 2 3 0 0 0 2 0 1 2 0 0 0 0 2 2 0 0 0 2 1 0 2 2 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 2 1 0 2 3 2 2 3 2 3 2 0 0 3 3 3 0 0 3 2 0 0 0 1 1 0 2 0 2 2 0 2 0 2 0 2 2 0 0 2 0 2 2 2 0 2 2 2 2 0 0 2 0 0 0 2 0 1 0 0 0 0 0 3 0 3 3 2 2 0 3 0 0 0 2 2 0 2 2 2 1 2 0 0 1 2 2 0 0 3 0 0 0 2 0 1 2 0 0 0 1 2 0 0 0 0 0 0 0 2 2 0 1 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 2 2 0 0 0 2 0 2 3 3 0 2 0 0 0 0 0 0 2 2 2 0 2 2 0 2 0 2 0 2 2 0 0 2 2 2 2 1 0 0 2 2 0 2 0 0 2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 3 2 3 0 0 0 3 0 0 2 2 0 2 0 2 2 2 0 0 2 0 0 0 0 0 0 0 0 2 0 0 2 2 0 0 2 2 2 0 0 0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 3 2 0 2 2 2 2 2 0 0 0 2 0 0 0 0 2 0 1 0 0 2 0 1 0 0 0 0 2 2 2 0 2 2 0 1 2 0 2 2 2 0 2 2 2 2 1 2 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 2 0 2 2 0 0 0 0 1 2 1 0 0 2 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 0 0 2 0 0 0 2 2 0 2 0 0 0 1 0 0 2 0 2 0 2 2 0 0 0 0 0 0 2 0 0 0 0 2 2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 2 3 2 2 0 0 0 0 0 0 1 3 0 2 0 2 2 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 3 2 0 2 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 1 1 0 0 2 1 2 0 2 2 0 1 0 0 1 0 0 0 2 0 0 0 0 0 0 0 3 0 2 2 2 0 0 2 0 0 0 2 0 0 0 2 3 0 2 0 0 0 0 0 0 2 2 0 0 0 2 0 1 2 0 0 0 1 2 2 1 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 2 0 2 2 0 2 0 0 2 0 0 0 0 1 2 1 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 3 1 2 2 0 2 0 0 0 0 2 0 0 0 2 0 0 3 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 2 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 2 0 2 2 0 0 2 2 2 2 2 0 1 2 0 0 0 2 2 0 1 0 2 0 0 2 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 2 0 1 2 0 0 0 0 2 2 1 0 1 0 1 0 2 2 2 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 1 2 0 0 0 0 0 0 0 0 0 0 2 0 0 2 2 0 0 0 0 1 0 0 0 0 0 0 2 0 2 2 0 0 0 0 2 2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 2 2 2 2 0 0 0 3 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 0 0 0 0 1 2 0 0 0 0 0 0 2 2 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 2 2 2 0 0 2 0 0 0 0 0 0 0 2 2 2 0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 2 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 2 0 0 0 0 2 2 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 2 1 0 0 0 0 0 0 2 0 0 2 0 2 2 2 0 0 0 0 0 0 2 0 0 0 0 2 0 0 2 0 0 2 0 2 2 0 0 0 0 2 0 2 0 0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 3 0 0 0 2 2 0 2 2 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 2 2 2 2 2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 0 0 1 0 0 0 0 2 2 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 2 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 2 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]) nil [181618 190363]) ("unicad-koi8r-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 68 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 27 3 21 28 13 2 39 19 26 4 23 11 8 12 5 1 15 16 9 7 6 14 24 10 17 18 20 25 30 29 22 54 59 37 44 58 41 48 53 46 55 42 60 36 49 38 31 34 35 43 45 32 40 52 56 33 61 62 51 57 47 63 50 70])) nil [190444 191655]) ("unicad-win1251-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 68 247 248 249 250 251 252 253 37 44 33 46 41 48 56 51 42 60 36 49 38 31 34 35 45 32 40 52 53 55 58 50 57 63 70 62 61 47 59 43 3 21 10 19 13 2 24 20 4 23 11 8 12 5 1 15 9 7 6 14 39 26 28 22 25 29 54 18 17 30 27 16])) nil [191657 192836]) ("unicad-latin5-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 37 44 33 46 41 48 56 51 42 60 36 49 38 31 34 35 45 32 40 52 53 55 58 50 57 63 70 62 61 47 59 43 3 21 10 19 13 2 24 20 4 23 11 8 12 5 1 15 9 7 6 14 39 26 28 22 25 29 54 18 17 30 27 16 239 68 240 241 242 243 244 245 246 247 248 249 250 251 252 255])) nil [192838 194016]) ("unicad-maccyrillic-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 37 44 33 46 41 48 56 51 42 60 36 49 38 31 34 35 45 32 40 52 53 55 58 50 57 63 70 62 61 47 59 43 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 68 16 3 21 10 19 13 2 24 20 4 23 11 8 12 5 1 15 9 7 6 14 39 26 28 22 25 29 54 18 17 30 27 255])) nil [194018 195201]) ("unicad-ibm855-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 191 192 193 194 68 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 27 59 54 70 3 37 21 44 28 58 13 41 2 48 39 53 19 46 218 219 220 221 222 223 224 26 55 4 42 225 226 227 228 23 60 229 230 231 232 233 234 235 11 36 236 237 238 239 240 241 242 243 8 49 12 38 5 31 1 34 15 244 245 246 247 35 16 248 43 9 45 7 32 6 40 14 52 24 56 10 33 17 61 249 250 18 62 20 51 25 57 30 47 29 63 22 50 251 252 255])) nil [195203 196382]) ("unicad-ibm866-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 37 44 33 46 41 48 56 51 42 60 36 49 38 31 34 35 45 32 40 52 53 55 58 50 57 63 70 62 61 47 59 43 3 21 10 19 13 2 24 20 4 23 11 8 12 5 1 15 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 9 7 6 14 39 26 28 22 25 29 54 18 17 30 27 16 239 68 240 241 242 243 244 245 246 247 248 249 250 251 252 255])) nil [196384 197562]) ("unicad-russian-lang-model" variable (:default-value (\` [0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 1 3 3 3 3 1 3 3 3 2 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 3 2 2 2 2 2 0 0 2 3 3 3 2 3 3 3 3 3 3 3 3 3 3 2 3 3 0 0 3 3 3 3 3 3 3 3 3 2 3 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 2 2 3 3 3 3 3 3 3 3 3 2 3 3 0 0 3 3 3 3 3 3 3 3 2 3 3 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 3 3 3 3 3 3 3 3 3 3 3 2 1 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 0 0 3 3 3 3 3 3 3 3 3 3 3 2 1 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 2 2 2 3 1 3 3 1 3 3 3 3 2 2 3 0 2 2 2 3 3 2 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 3 3 3 3 3 2 2 3 2 3 3 3 2 1 2 2 0 1 2 2 2 2 2 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 3 0 2 2 3 3 2 1 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 3 3 1 2 3 2 2 3 2 3 3 3 3 2 2 3 0 3 2 2 3 1 1 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 2 2 3 3 3 3 3 2 3 3 3 3 2 2 2 0 3 3 3 2 2 2 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 2 3 2 3 3 3 3 3 3 2 3 2 2 0 1 3 2 1 2 2 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 2 1 1 3 0 1 1 1 1 2 1 1 0 2 2 2 1 2 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 3 3 2 2 2 2 1 3 2 3 2 3 2 1 2 2 0 1 1 2 1 2 1 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 2 2 3 2 3 3 3 2 2 2 2 0 2 2 2 2 3 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 2 3 2 2 3 3 3 3 3 3 3 3 3 1 3 2 0 0 3 3 3 3 2 3 3 3 3 2 3 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 3 3 3 2 2 3 3 0 2 1 0 3 2 3 2 3 0 0 1 2 0 0 1 0 1 2 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 2 3 3 3 3 2 3 3 3 3 1 2 2 0 0 2 3 2 2 2 3 2 3 2 2 3 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 0 2 3 2 3 0 1 2 3 3 2 0 2 3 0 0 2 3 2 2 0 1 3 1 3 2 2 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 3 0 2 3 3 3 3 3 3 3 3 2 1 3 2 0 0 2 2 3 3 3 2 3 3 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 2 3 3 2 2 2 3 3 0 0 1 1 1 1 1 2 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 2 3 3 3 3 3 3 3 0 3 2 3 3 2 3 2 0 2 1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 3 3 3 2 2 2 2 3 1 3 2 3 1 1 2 1 0 2 2 2 2 1 3 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 2 3 3 3 3 3 1 2 2 1 3 1 0 3 0 0 3 0 0 0 1 1 0 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 2 1 1 3 3 3 2 2 1 2 2 3 1 1 2 0 0 2 2 1 3 0 0 2 1 1 2 1 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 3 3 3 1 2 2 2 1 2 1 3 3 1 1 2 1 2 1 2 2 0 2 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 3 3 3 2 1 3 2 2 3 2 0 3 2 0 3 0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 2 3 3 3 2 2 2 3 3 1 2 1 2 1 0 1 0 1 1 0 1 0 0 2 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 3 1 1 2 1 2 3 3 2 2 1 2 2 3 0 2 1 0 0 2 2 3 2 1 2 2 2 2 2 3 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 1 1 0 1 1 2 2 1 1 3 0 0 1 3 1 1 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 3 3 3 2 0 0 0 2 1 0 1 0 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 2 3 2 2 2 1 2 2 2 1 2 1 0 0 1 1 1 0 2 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 2 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 3 3 3 3 0 0 0 0 1 0 0 0 0 3 0 1 2 1 0 0 0 0 0 0 0 1 1 0 0 1 1 1 0 1 0 1 2 0 0 1 1 2 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 2 2 3 2 2 2 3 1 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 0 1 0 1 1 1 0 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 3 3 3 2 2 2 2 3 2 2 1 1 2 2 2 2 1 1 3 1 2 1 2 0 0 1 1 0 1 0 2 1 1 1 1 1 1 2 1 0 1 1 1 1 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 0 0 1 1 0 2 0 0 1 0 3 2 2 2 2 1 2 1 2 1 2 0 0 0 2 1 2 2 1 1 2 2 0 1 1 0 2 1 1 1 1 1 0 1 1 1 2 1 1 1 2 1 0 1 2 1 1 1 1 0 1 1 1 0 0 1 0 0 1 1 3 2 2 2 1 1 1 2 3 0 0 0 0 2 0 2 2 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 0 1 0 1 1 0 1 1 0 2 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 2 3 2 3 2 1 2 2 2 2 1 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 2 1 1 1 2 1 0 2 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 3 0 0 1 0 2 2 2 3 2 2 2 2 2 2 2 0 0 0 2 1 2 1 1 1 2 2 0 0 0 1 2 1 1 1 1 1 0 1 2 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 2 3 2 3 3 2 0 1 1 1 0 0 1 0 2 0 1 1 3 1 0 0 0 0 0 0 0 1 0 0 2 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 1 1 0 1 0 0 0 0 0 0 1 0 2 3 3 3 3 1 2 2 2 2 0 1 1 0 2 1 1 1 2 1 0 1 1 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 3 2 0 0 1 1 2 2 1 0 0 2 0 1 1 3 0 0 1 0 0 0 0 0 1 0 1 2 1 1 1 2 0 1 1 1 0 1 0 1 1 0 1 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 1 3 2 3 2 1 0 0 2 2 2 0 1 0 2 0 1 1 1 0 1 0 0 0 3 0 1 1 0 0 2 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 2 1 1 0 1 0 0 0 1 0 1 0 0 1 1 0 3 1 2 1 1 2 2 2 2 2 2 1 2 2 1 1 0 0 0 2 2 2 0 0 0 1 2 1 0 1 0 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 2 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 3 0 0 0 0 2 0 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 0 1 1 3 3 2 2 0 0 0 2 2 0 0 0 1 2 0 1 1 2 0 0 0 0 0 0 0 0 1 0 0 2 1 0 1 1 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 2 3 2 3 2 0 0 0 0 1 1 0 0 0 2 0 2 0 2 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 2 0 1 2 1 0 1 1 2 1 1 1 1 1 2 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 1 3 2 2 2 1 0 0 2 2 1 0 1 2 2 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 2 3 1 2 2 2 2 2 2 1 1 0 0 0 1 0 1 0 2 1 1 1 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 2 0 0 1 0 3 2 1 2 1 2 2 0 1 0 0 0 2 1 0 0 2 1 1 1 1 0 2 0 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 0 1 1 1 1 0 0 0 1 1 1 1 0 1 0 0 1 1 2 2 2 2 1 0 0 1 0 0 0 0 0 2 0 1 1 1 1 0 0 0 0 1 0 1 2 0 0 2 0 1 0 1 1 1 2 1 0 1 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 1 1 0 2 1 2 2 2 0 3 0 1 1 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 2 2 3 2 2 0 0 1 1 2 0 1 2 1 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 2 2 1 1 2 1 2 2 2 2 2 1 2 2 0 1 0 0 0 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 0 1 1 0 0 1 1 2 2 2 2 0 1 0 2 2 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 1 0 0 0 0 1 0 1 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 2 2 0 0 0 2 2 2 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 2 2 0 0 0 0 1 0 0 1 1 2 0 0 0 0 1 0 1 0 0 1 0 0 2 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 2 2 2 1 1 2 0 2 1 1 1 1 0 2 2 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 2 1 2 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 2 0 1 2 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])) nil [197733 206610]) ("unicad-latin5-bulgarian-char2order-map" variable (:constant-flag t :default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 77 90 99 100 72 109 107 101 79 185 81 102 76 94 82 110 186 108 91 74 119 84 96 111 187 115 253 253 253 253 253 253 65 69 70 66 63 68 112 103 92 194 104 95 86 87 71 116 195 85 93 97 113 196 197 198 199 200 253 253 253 253 253 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 81 226 227 228 229 230 105 231 232 233 234 235 236 45 237 238 31 32 35 43 37 44 55 47 40 59 33 46 38 36 41 30 39 28 34 51 48 49 53 50 54 57 61 239 67 240 60 56 1 18 9 20 11 3 23 15 2 26 12 10 14 6 4 13 7 8 5 19 29 25 22 21 27 24 17 75 52 241 42 16 62 242 243 244 58 245 98 246 247 248 249 250 251 91 252 253])) nil [207072 208293]) ("unicad-win1251-bulgarian-char2order-map" variable (:constant-flag t :default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 77 90 99 100 72 109 107 101 79 185 81 102 76 94 82 110 186 108 91 74 119 84 96 111 187 115 253 253 253 253 253 253 65 69 70 66 63 68 112 103 92 194 104 95 86 87 71 116 195 85 93 97 113 196 197 198 199 200 253 253 253 253 253 206 207 208 209 210 211 212 213 120 214 215 216 217 218 219 220 221 78 64 83 121 98 117 105 222 223 224 225 226 227 228 229 88 230 231 232 233 122 89 106 234 235 236 237 238 45 239 240 73 80 118 114 241 242 243 244 245 62 58 246 247 248 249 250 31 32 35 43 37 44 55 47 40 59 33 46 38 36 41 30 39 28 34 51 48 49 53 50 54 57 61 251 67 252 60 56 1 18 9 20 11 3 23 15 2 26 12 10 14 6 4 13 7 8 5 19 29 25 22 21 27 24 17 75 52 253 42 16])) nil [208295 209517]) ("unicad-bulgarian-lang-model" variable (:constant-flag t :default-value (\` [0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 3 3 3 2 2 3 2 2 1 2 2 3 1 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 0 3 3 3 3 3 3 3 3 3 3 0 3 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 2 3 3 3 3 3 3 3 3 0 3 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 2 3 3 3 3 3 3 3 3 0 3 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 1 3 2 3 3 3 3 3 3 3 3 0 3 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 2 3 2 2 1 3 3 3 3 2 2 2 1 1 2 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 2 3 2 2 3 3 1 1 2 3 3 2 3 3 3 3 2 1 2 0 2 0 3 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 1 3 3 3 3 3 2 3 2 3 3 3 3 3 2 3 3 1 3 0 3 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 3 1 3 3 2 3 3 3 1 3 3 2 3 2 2 2 0 0 2 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 3 3 0 3 3 3 2 2 3 3 3 1 2 2 3 2 1 1 2 0 2 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 2 3 3 1 2 3 2 2 2 3 3 3 3 3 2 2 3 1 2 0 2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 1 3 3 3 3 3 2 3 3 3 2 3 3 2 3 2 2 2 3 1 2 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 3 3 3 3 1 1 1 2 2 1 3 1 3 2 2 3 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 2 2 3 2 2 3 1 2 1 1 1 2 3 1 3 1 2 2 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 1 3 2 2 3 3 1 2 3 1 1 3 3 3 3 1 2 2 1 1 1 0 2 0 2 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 2 2 3 3 3 2 2 1 1 2 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 0 1 2 1 3 3 2 3 3 3 3 3 2 3 2 1 0 3 1 2 1 2 1 2 3 2 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 2 3 3 3 3 3 3 3 3 3 3 3 3 0 0 3 1 3 3 2 3 3 2 2 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 3 3 0 3 3 3 3 3 2 1 1 2 1 3 3 0 3 1 1 1 1 3 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 2 2 2 3 3 3 3 3 3 3 3 3 3 3 1 1 3 1 3 3 2 3 2 2 2 3 0 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 3 3 2 2 3 2 1 1 1 1 1 3 1 3 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 3 2 0 3 2 0 3 0 2 0 0 2 1 3 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 2 1 1 1 1 2 1 1 2 1 1 1 2 2 1 2 1 1 1 0 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 2 1 3 1 1 2 1 3 2 1 1 0 1 2 3 2 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 3 3 3 2 2 1 0 1 0 0 1 0 0 0 2 1 0 3 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 3 3 2 3 2 3 3 1 3 2 1 1 1 2 1 1 2 1 3 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 1 2 2 3 3 2 3 2 2 2 3 1 2 2 1 1 2 1 1 2 2 0 1 1 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 2 1 3 1 0 2 2 1 3 2 1 0 0 2 0 2 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 3 3 3 3 3 3 1 2 0 2 3 1 2 3 2 0 1 3 1 2 1 1 1 0 0 1 0 0 2 2 2 3 2 2 2 2 1 2 1 1 2 2 1 1 2 0 1 1 1 0 0 1 1 0 0 1 1 0 0 0 1 1 0 1 3 3 3 3 3 2 1 2 2 1 2 0 2 0 1 0 1 2 1 2 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 3 3 2 3 3 1 1 3 1 0 3 2 1 0 0 0 1 2 0 2 0 1 0 0 0 1 0 1 2 1 2 2 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 0 1 2 1 1 1 0 0 0 0 0 1 1 0 0 3 1 0 1 0 2 3 2 2 2 3 2 2 2 2 2 1 0 2 1 2 1 1 1 0 1 2 1 2 2 2 1 1 1 2 2 2 2 1 2 1 1 0 1 2 1 2 2 2 1 1 1 0 1 1 1 1 2 0 1 0 0 0 0 2 3 2 3 3 0 0 2 1 0 2 1 0 0 0 0 2 3 0 2 0 0 0 0 0 1 0 0 2 0 1 2 2 1 2 1 2 2 1 1 1 2 1 1 1 0 1 2 2 1 1 1 1 1 0 1 1 1 0 0 1 2 0 0 3 3 2 2 3 0 2 3 1 1 2 0 0 0 1 0 0 2 0 2 0 0 0 1 0 1 0 1 2 0 2 2 1 1 1 1 2 1 0 1 2 2 2 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 1 0 0 2 3 2 3 3 0 0 3 0 1 1 0 1 0 0 0 2 2 1 2 0 0 0 0 0 0 0 0 2 0 1 2 2 2 1 1 1 1 1 2 2 2 1 0 2 0 1 0 1 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0 3 3 3 3 2 2 2 2 2 0 2 1 1 1 1 2 1 2 1 1 0 2 0 1 0 1 0 0 2 0 1 2 1 1 1 1 1 1 1 2 2 1 1 0 2 0 1 0 2 0 0 1 1 1 0 0 2 0 0 0 1 1 0 0 2 3 3 3 3 1 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 1 2 0 1 2 2 2 2 1 1 2 1 1 2 2 2 1 2 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 2 3 3 3 3 0 2 2 0 2 1 0 0 0 1 1 1 2 0 2 0 0 0 3 0 0 0 0 2 0 2 2 1 1 1 2 1 2 1 1 2 2 2 1 2 0 1 1 1 0 1 1 1 1 0 2 1 0 0 0 1 1 0 0 2 3 3 3 3 0 2 1 0 0 2 0 0 0 0 0 1 2 0 2 0 0 0 0 0 0 0 0 2 0 1 2 1 1 1 2 1 1 1 1 2 2 2 0 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 0 3 3 2 2 3 0 1 0 1 0 0 0 0 0 0 0 1 1 0 3 0 0 0 0 0 0 0 0 1 0 2 2 1 1 1 1 1 2 1 1 2 2 1 2 2 1 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 3 1 0 1 0 2 2 2 2 3 2 1 1 1 2 3 0 0 1 0 2 1 1 0 1 1 1 1 2 1 1 1 1 2 2 1 2 1 2 2 1 1 0 1 2 1 2 2 1 1 1 0 0 1 1 1 2 1 0 1 0 0 0 0 2 1 0 1 0 3 1 2 2 2 2 1 2 2 1 1 1 0 2 1 2 2 1 1 2 1 1 0 2 1 1 1 1 2 2 2 2 2 2 2 1 2 0 1 1 0 2 1 1 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0 2 1 1 1 1 2 2 2 2 1 2 2 2 1 2 2 1 1 2 1 2 3 2 2 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 3 2 0 1 2 0 1 2 1 1 0 1 0 1 2 1 2 0 0 0 1 1 0 0 0 1 0 0 2 1 1 0 0 1 1 0 1 1 1 1 0 2 0 1 1 1 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 2 0 0 0 0 1 2 2 2 2 2 2 2 1 2 1 1 1 1 1 1 1 0 1 1 1 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 2 1 1 1 0 2 1 2 1 1 1 0 2 1 1 1 1 0 1 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 3 2 0 0 0 0 1 0 0 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 1 0 1 2 1 1 1 1 1 1 0 0 2 2 2 2 2 0 1 1 0 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 2 3 1 2 1 0 1 1 0 2 2 2 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 0 1 0 0 2 2 2 2 2 0 0 2 0 0 2 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 2 0 2 2 1 1 1 1 1 0 0 1 2 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 2 2 2 2 0 0 2 0 1 1 0 0 0 1 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 2 2 3 2 0 0 1 0 0 1 0 0 0 0 0 0 1 0 2 0 0 0 1 0 0 0 0 0 0 0 2 1 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 2 1 2 2 2 1 2 1 2 2 1 1 2 1 1 1 0 1 1 1 1 2 0 1 0 1 1 1 1 0 1 1 1 1 2 1 1 1 1 1 1 0 0 1 2 1 1 1 1 1 1 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 3 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 1 0 0 1 0 2 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 2 0 0 1 0 2 0 1 0 0 1 1 2 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 2 2 0 1 1 0 2 1 0 1 1 1 0 0 1 0 2 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 0 0 1 0 0 0 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 1 2 1 1 1 1 1 1 2 2 1 0 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 1 1 2 1 1 1 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 1 2 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 2 0 0 2 0 1 0 0 1 0 0 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 2 0 0 0 0 0 0 2 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])) nil [209685 218566]) ("unicad-win1255-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 69 91 79 80 92 89 97 90 68 111 112 82 73 95 85 78 121 86 71 67 102 107 84 114 103 115 253 253 253 253 253 253 50 74 60 61 42 76 70 64 53 105 93 56 65 54 49 66 110 51 43 44 63 81 77 98 75 108 253 253 253 253 253 124 202 203 204 205 40 58 206 207 208 209 210 211 212 213 214 215 83 52 47 46 72 32 94 216 113 217 109 218 219 220 221 34 116 222 118 100 223 224 117 119 104 125 225 226 87 99 227 106 122 123 228 55 229 230 101 231 232 120 233 48 39 57 234 30 59 41 88 33 37 36 31 29 35 235 62 28 236 126 237 238 38 45 239 240 241 242 243 127 244 245 246 247 248 249 250 9 8 20 16 3 2 24 14 22 1 25 15 4 11 6 23 12 19 13 26 18 27 21 17 7 10 5 251 252 128 96 253])) nil [218956 220135]) ("unicad-hebrew-lang-model" variable (:default-value (\` [0 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 2 3 2 1 2 0 1 0 0 3 0 3 1 0 0 1 3 2 0 1 1 2 0 2 2 2 1 1 1 1 2 1 1 1 2 0 0 2 2 0 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 1 2 1 2 1 2 0 0 2 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 1 2 1 3 1 1 0 0 2 0 0 0 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 0 1 2 2 1 3 1 2 1 1 2 2 0 0 2 2 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 2 2 2 2 3 2 1 2 1 2 2 2 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 2 3 2 2 3 2 2 2 1 2 2 2 2 1 2 1 1 2 2 0 1 2 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 0 2 2 2 2 2 0 2 0 2 2 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 0 2 2 2 0 2 1 2 2 2 0 0 2 1 0 0 0 0 1 0 1 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 2 1 2 3 2 2 2 1 2 1 2 2 2 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 3 3 3 3 3 3 3 3 3 2 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 1 0 2 0 2 0 2 1 2 2 2 0 0 1 2 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 2 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 2 3 2 2 3 2 1 2 1 1 1 0 1 1 1 1 1 3 0 1 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 0 2 0 1 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 2 3 3 3 2 1 2 3 3 2 3 3 3 3 2 3 2 1 2 0 2 1 2 0 2 0 2 2 2 0 0 1 2 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 3 3 3 3 3 3 3 3 3 2 3 3 3 1 2 2 3 3 2 3 2 3 2 2 3 1 2 2 0 2 2 2 0 2 1 2 2 2 0 0 1 2 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 2 3 3 2 2 2 3 3 3 3 1 3 2 2 2 0 2 0 1 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 3 3 3 2 3 2 2 2 1 2 2 0 2 2 2 2 0 2 0 2 2 2 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 1 3 2 3 3 2 3 3 2 2 1 2 2 2 2 2 2 0 2 1 2 1 2 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 3 3 3 3 3 3 2 3 2 3 3 2 3 3 3 3 2 3 2 3 3 3 3 3 2 2 2 2 2 2 2 1 0 2 0 1 2 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 3 3 3 3 3 3 3 3 3 2 1 2 3 3 3 3 3 3 3 2 3 2 3 2 1 2 3 0 2 1 2 2 0 2 1 1 2 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 3 3 3 3 3 3 3 3 3 2 3 3 3 3 2 1 3 1 2 2 2 1 2 3 3 1 2 1 2 2 2 2 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 0 2 3 3 3 1 3 3 3 1 2 2 2 2 1 1 2 2 2 2 2 2 0 2 0 1 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 3 3 3 3 3 3 2 3 3 3 2 2 3 3 3 2 1 2 3 2 3 2 2 2 2 1 2 1 1 1 2 2 0 2 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 2 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 2 3 3 2 3 1 2 2 2 2 3 2 3 1 1 2 2 1 2 2 1 1 0 2 2 2 2 0 1 0 1 2 2 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 3 0 0 1 1 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 2 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 0 3 3 3 0 3 0 2 2 2 2 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 1 2 2 2 1 1 1 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 0 2 2 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 0 2 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 3 1 1 2 2 2 2 2 1 2 2 2 1 1 2 2 2 2 2 2 2 1 2 2 1 0 1 1 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 1 1 1 1 2 1 1 2 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 1 2 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 1 1 2 1 1 1 2 1 2 1 2 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 1 2 2 2 1 2 2 2 2 2 2 2 2 1 2 1 1 1 1 1 1 2 1 2 1 1 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 0 2 0 1 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 1 1 1 2 1 2 2 2 0 2 0 2 0 1 1 2 1 1 1 1 2 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 2 2 0 1 0 0 1 1 2 2 1 2 0 2 0 0 0 1 2 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 1 2 0 2 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 2 1 1 0 1 0 0 1 1 1 2 2 0 0 1 0 0 0 1 0 0 1 1 1 2 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 2 2 1 0 2 0 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 2 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 1 0 1 2 0 1 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 2 1 1 2 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 2 0 1 0 0 0 0 2 1 1 2 0 2 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 1 1 0 1 0 0 2 2 1 2 1 1 0 1 0 0 0 1 1 0 1 2 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 2 0 0 0 0 2 1 1 1 0 2 1 1 0 0 0 2 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 2 0 1 0 0 1 1 0 2 1 1 0 1 0 0 0 1 1 0 1 2 2 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 1 1 0 1 0 0 1 1 0 1 2 1 0 2 0 0 0 1 1 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 0 0 2 0 2 1 1 0 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 2 0 1 0 0 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 2 1 1 1 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 2 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 0])) nil [220305 229181]) ("unicad-win1255-model" variable (:default-value (list (cons (quote char2order-map) unicad-win1255-char2order-map) (cons (quote precedence-matrix) unicad-hebrew-lang-model) (cons (quote typ-positive-ratio) 0.984004) (cons (quote keep-english-letter) nil) (cons (quote charset-name) (quote windows-1255)))) nil [229183 229447]) ("unicad-sjis-sb-char2order-map" variable (:default-value (\` [255 255 255 255 255 255 255 255 255 255 254 255 255 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 253 252 252 252 252 252 252 252 252 252 252 253 253 253 253 253 253 253 142 143 144 145 146 147 148 149 150 151 152 74 153 75 154 155 156 157 158 159 160 161 162 163 164 165 253 253 253 253 253 253 71 172 66 173 65 174 76 175 64 176 177 77 72 178 69 67 179 78 73 180 181 79 182 183 184 185 253 253 253 253 253 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 252 254 254 254 16 59 37 17 58 31 53 49 33 40 24 2 13 8 22 34 43 27 19 7 38 23 35 14 6 44 29 10 48 50 12 3 46 39 57 47 54 25 28 5 32 41 21 45 30 26 42 55 52 56 20 15 11 36 18 51 4 1 9 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255])) nil [229487 230698]) ("unicad-sjis-sb-lang-model" variable (:default-value (\` [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 3 3 3 3 3 0 3 3 3 3 3 3 3 3 2 3 3 0 3 0 3 2 2 2 2 2 3 2 2 3 0 3 3 3 3 2 3 2 2 3 2 2 3 3 0 3 2 2 0 0 0 2 0 2 2 0 0 0 0 0 0 3 0 3 0 0 3 0 0 0 3 3 0 0 2 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 2 0 0 0 0 2 0 0 0 0 0 0 0 0 3 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 0 3 3 0 0 3 3 0 0 3 0 0 0 0 0 3 0 0 0 0 0 0 0 0 3 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 0 0 0 0 0 3 0 0 2 0 0 3 2 3 2 0 3 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 0 2 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 0 3 0 0 0 2 0 3 0 3 3 2 0 3 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 0 0 0 0 0 2 2 0 2 2 0 0 0 0 0 0 0 0 0 0 3 3 3 3 0 3 3 0 0 3 2 3 0 2 3 3 0 2 0 0 0 0 2 0 0 3 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 2 3 0 2 2 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 2 2 3 0 2 0 3 0 2 3 0 0 3 0 3 0 0 0 3 0 0 0 0 3 0 0 0 3 0 2 3 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 0 2 0 0 0 0 0 2 2 0 0 2 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 0 2 3 0 0 2 3 2 0 0 2 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 2 3 3 2 0 3 0 2 0 3 0 2 0 2 0 2 0 3 0 3 2 2 0 0 0 0 0 0 0 2 0 0 3 0 0 2 2 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 2 0 0 3 0 0 0 3 2 0 0 3 3 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 2 0 0 3 0 0 0 0 2 2 0 3 2 0 0 0 0 2 0 2 0 0 0 0 0 0 2 0 2 0 0 0 2 3 0 0 2 0 0 2 2 2 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 3 0 0 0 3 0 0 3 0 0 0 0 0 2 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 0 3 0 0 0 2 0 0 0 3 0 0 0 0 0 0 0 2 0 3 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 2 0 3 2 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 2 0 3 0 0 2 0 0 0 3 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 2 0 0 2 0 0 0 0 2 0 0 3 3 0 0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 3 0 2 0 0 0 2 0 2 0 2 0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 2 2 0 0 3 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 3 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 3 0 0 0 0 3 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 2 2 2 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 2 0 0 0 3 3 0 0 0 0 0 0 0 0 2 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 2 3 0 0 0 0 0 2 3 0 0 2 3 0 0 0 0 2 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 2 2 0 3 0 0 0 2 3 3 0 2 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 2 0 0 3 0 0 2 0 0 0 0 0 2 0 2 0 0 0 2 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 2 2 2 2 0 2 2 2 3 2 0 0 3 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2 0 0 2 3 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 2 2 0 2 0 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 2 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 0 0 0 0 0 3 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 3 0 2 0 0 0 2 2 2 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 2 2 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 3 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 3 0 2 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 2 0 0 0 2 0 3 0 2 2 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 3 0 0 0 2 0 3 0 2 0 0 0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 3 0 2 0 0 0 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])) nil [230700 238905]) ("unicad-hz-class-table" variable (:constant-flag t :default-value [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 5 2 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]) nil [238995 240028]) ("unicad-hz-state-table" variable (:constant-flag t :default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eStart eError 3 eStart eStart eStart eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eStart eStart 4 eError 5 eError 6 eError 5 5 4 eError 4 eError 4 4 4 eError 4 eError 4 eItsMe eStart eStart eStart eStart eStart eStart))) nil [240057 240587]) ("unicad-hz-charlen-table" variable (:constant-flag t :default-value [0 0 0 0 0 0]) nil [240654 240709]) ("unicad-hz-sm-model" variable (:default-value (list (cons (quote classTable) unicad-hz-class-table) (cons (quote classFactor) 6) (cons (quote stateTable) unicad-hz-state-table) (cons (quote charLenTable) unicad-hz-charlen-table) (cons (quote name) "HZ-GB-2312"))) nil [240711 240937]) ("unicad-iso2022cn-class-table" variable (:constant-flag t :default-value [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]) nil [240979 242019]) ("unicad-iso2022cn-state-table" variable (:constant-flag t :default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eStart 3 eError eStart eStart eStart eStart eStart eStart eError eError eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eError 4 eError eError eError eError eItsMe eError eError eError eError 5 6 eError eError eError eError eError eError eError eError eError eItsMe eError eError eError eError eError eError eError eError eError eItsMe eError eStart))) nil [242022 242699]) ("unicad-iso2022cn-charlen-table" variable (:constant-flag t :default-value [0 0 0 0 0 0]) nil [242701 242763]) ("unicad-iso2022cn-sm-model" variable (:default-value (list (cons (quote classTable) unicad-iso2022cn-class-table) (cons (quote classFactor) 9) (cons (quote stateTable) unicad-iso2022cn-state-table) (cons (quote charLenTable) unicad-iso2022cn-charlen-table) (cons (quote name) "ISO-2022-CN"))) nil [242765 243020]) ("unicad-iso2022jp-class-table" variable (:constant-flag t :default-value [2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 7 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 4 0 8 0 0 0 0 9 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]) nil [243062 244102]) ("unicad-iso2022jp-state-table" variable (:constant-flag t :default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eStart 3 eError eStart eStart eStart eStart eStart eStart eStart eError eError eError eError eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eError 5 eError eError eError 4 eError eError eError eError eError 6 eItsMe eError eItsMe eError eError eError eError eError eError eError eItsMe eItsMe eError eError eError eItsMe eError eError eError eError eError eError eError eError eItsMe eError eStart eStart))) nil [244105 244852]) ("unicad-iso2022jp-charlen-table" variable (:constant-flag t :default-value [0 0 0 0 0 0]) nil [244854 244916]) ("unicad-iso2022jp-sm-model" variable (:default-value (list (cons (quote classTable) unicad-iso2022jp-class-table) (cons (quote classFactor) 10) (cons (quote stateTable) unicad-iso2022jp-state-table) (cons (quote charLenTable) unicad-iso2022jp-charlen-table) (cons (quote name) "ISO-2022-JP"))) nil [244918 245174]) ("unicad-iso2022kr-class-table" variable (:constant-flag t :default-value [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]) nil [245216 246256]) ("unicad-iso2022kr-state-table" variable (:constant-flag t :default-value (let ((eStart 0) (eError 1) (eItsMe 2)) (vector eStart 3 eError eStart eStart eStart eError eError eError eError eError eError eItsMe eItsMe eItsMe eItsMe eItsMe eItsMe eError eError eError 4 eError eError eError eError eError eError 5 eError eError eError eError eError eError eItsMe eStart eStart eStart eStart))) nil [246259 246726]) ("unicad-iso2022kr-charlen-table" variable (:constant-flag t :default-value [0 0 0 0 0 0]) nil [246728 246790]) ("unicad-iso2022kr-sm-model" variable (:default-value (list (cons (quote classTable) unicad-iso2022kr-class-table) (cons (quote classFactor) 6) (cons (quote stateTable) unicad-iso2022kr-state-table) (cons (quote charLenTable) unicad-iso2022kr-charlen-table) (cons (quote name) "ISO-2022-KR"))) nil [246792 247047]) ("unicad" package nil nil [247056 247073]))
    :file "unicad.el"
    :pointmax 247147
    )
   (semanticdb-table "htmlize.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [3872 3885]) ("if" code nil nil [3907 4006]) ("font-lock-auto-fontify" variable nil nil [4009 4040]) ("font-lock-support-mode" variable nil nil [4043 4074]) ("global-font-lock-mode" variable nil nil [4077 4107]) ("when" code nil nil [4110 4316]) ("htmlize-version" variable (:constant-flag t :default-value "1.34") nil [4319 4352]) ("condition-case" code nil nil [4479 4538]) ("if" code nil nil [4541 5056]) ("defgroup" code nil nil [5059 5145]) ("htmlize-head-tags" variable (:user-visible-flag t) nil [5147 5283]) ("htmlize-output-type" variable (:user-visible-flag t :default-value (quote css)) nil [5285 6233]) ("htmlize-generate-hyperlinks" variable (:user-visible-flag t :default-value t) nil [6235 6577]) ("htmlize-hyperlink-style" variable (:user-visible-flag t :default-value "
      a {
        color: inherit;
        background-color: inherit;
        font: inherit;
        text-decoration: inherit;
      }
      a:hover {
        text-decoration: underline;
      }
") nil [6579 6903]) ("htmlize-replace-form-feeds" variable (:user-visible-flag t :default-value t) nil [6905 7666]) ("htmlize-html-charset" variable (:user-visible-flag t) nil [7668 8756]) ("htmlize-convert-nonascii-to-entities" variable (:user-visible-flag t :default-value (featurep (quote mule))) nil [8758 10503]) ("htmlize-ignore-face-size" variable (:user-visible-flag t :default-value (quote absolute)) nil [10505 10961]) ("htmlize-css-name-prefix" variable (:user-visible-flag t) nil [10963 11343]) ("htmlize-use-rgb-txt" variable (:user-visible-flag t :default-value t) nil [11345 12104]) ("htmlize-html-major-mode" variable nil nil [12106 12416]) ("htmlize-before-hook" variable nil nil [12418 12571]) ("htmlize-after-hook" variable nil nil [12573 12793]) ("htmlize-file-hook" variable nil nil [12795 12902]) ("htmlize-buffer-places" variable nil nil [12904 12934]) ("htmlize-running-xemacs" variable (:constant-flag t :default-value (string-match "XEmacs" emacs-version)) nil [13106 13177]) ("unless" code nil nil [13767 13975]) ("unless" code nil nil [13978 14131]) ("unless" code nil nil [14134 14490]) ("cond" code nil nil [15224 16631]) ("htmlize-basic-character-table" variable (:default-value (let ((table (make-vector 128 0))) (dotimes (i 128) (setf (aref table i) (if (and (>= i 32) (<= i 126)) (char-to-string i) (format "&#%d;" i)))) (setf (aref table 10) "
" (aref table 13) "" (aref table 9) "	" (aref table 38) "&amp;" (aref table 60) "&lt;" (aref table 62) "&gt;") table)) nil [16705 17621]) ("htmlize-extended-character-cache" variable (:default-value (make-hash-table :test (quote eq))) nil [18206 18275]) ("htmlize-protect-string" function (:arguments ("string")) nil [18277 19730]) ("htmlize-ellipsis" variable (:constant-flag t :default-value "...") nil [19732 19765]) ("put-text-property" code nil nil [19766 19850]) ("htmlize-buffer-substring-no-invisible" function (:arguments ("beg" "end")) nil [19852 22103]) ("htmlize-trim-ellipsis" function (:arguments ("text")) nil [22105 22464]) ("htmlize-tab-spaces" variable (:constant-flag t :default-value (let ((v (make-vector 32 nil))) (dotimes (i (length v)) (setf (aref v i) (make-string i 32))) v)) nil [22466 22733]) ("htmlize-untabify" function (:arguments ("text" "start-column")) nil [22735 24145]) ("htmlize-despam-address" function (:arguments ("string")) nil [24147 24474]) ("htmlize-make-hyperlinks" function nil nil [24476 25397]) ("htmlize-defang-local-variables" function nil nil [25686 26118]) ("if" code nil nil [26145 26386]) ("htmlize-x-library-search-path" variable (:default-value (quote ("/usr/X11R6/lib/X11/" "/usr/X11R5/lib/X11/" "/usr/lib/X11R6/X11/" "/usr/lib/X11R5/X11/" "/usr/local/X11R6/lib/X11/" "/usr/local/X11R5/lib/X11/" "/usr/local/lib/X11R6/X11/" "/usr/local/lib/X11R5/X11/" "/usr/X11/lib/X11/" "/usr/lib/X11/" "/usr/local/lib/X11/" "/usr/X386/lib/X11/" "/usr/x386/lib/X11/" "/usr/XFree86/lib/X11/" "/usr/unsupported/lib/X11/" "/usr/athena/lib/X11/" "/usr/local/x11r5/lib/X11/" "/usr/lpp/Xamples/lib/X11/" "/usr/openwin/lib/X11/" "/usr/openwin/share/lib/X11/"))) nil [26388 26992]) ("htmlize-get-color-rgb-hash" function (:arguments ("&optional" "rgb-file")) nil [26994 28197]) ("htmlize-color-rgb-hash" variable (:default-value (htmlize-get-color-rgb-hash)) nil [28348 28408]) ("htmlize-face-specifies-property" function (:arguments ("face" "prop")) nil [28431 28991]) ("htmlize-face-color-internal" function (:arguments ("face" "fg")) nil [28993 30395]) ("htmlize-face-foreground" function (:arguments ("face")) nil [30397 30779]) ("htmlize-face-background" function (:arguments ("face")) nil [30781 31165]) ("htmlize-color-to-rgb" function (:arguments ("color")) nil [31269 32650]) ("htmlize-fstruct" type (:members ("foreground" "background" "size" "boldp" "italicp" "underlinep" "overlinep" "strikep" "css-name") :type "struct") nil [33062 33438]) ("htmlize-face-emacs21-attr" function (:arguments ("fstruct" "attr" "value")) nil [33440 34395]) ("htmlize-face-size" function (:arguments ("face")) nil [34397 34776]) ("htmlize-face-to-fstruct" function (:arguments ("face")) nil [34778 38231]) ("htmlize-copy-attr-if-set" function (:arguments ("attr-list" "dest" "source")) nil [38233 38694]) ("htmlize-merge-size" function (:arguments ("merged" "next")) nil [38696 38963]) ("htmlize-merge-two-faces" function (:arguments ("merged" "next")) nil [38965 39259]) ("htmlize-merge-faces" function (:arguments ("fstruct-list")) nil [39261 39613]) ("htmlize-attrlist-to-fstruct" function (:arguments ("attrlist")) nil [39947 40765]) ("htmlize-face-list-p" function (:arguments ("face-prop")) nil [40767 41722]) ("htmlize-make-face-map" function (:arguments ("faces")) nil [41724 42685]) ("htmlize-unstringify-face" function (:arguments ("face")) nil [42687 42853]) ("htmlize-faces-in-buffer" function nil nil [42855 44748]) ("cond" code nil nil [45095 47792]) ("htmlize-method" function (:arguments ("method" "&rest" "args")) nil [48654 48865]) ("htmlize-method-function" function (:arguments ("method")) nil [48867 49307]) ("htmlize-memoization-table" variable (:default-value (make-hash-table :test (quote equal))) nil [49309 49374]) ("htmlize-memoize" function (:arguments ("key" "generator")) nil [49376 49858]) ("htmlize-default-doctype" function nil nil [49883 51242]) ("htmlize-default-body-tag" function (:arguments ("face-map")) nil [51244 51324]) ("htmlize-css-specs" function (:arguments ("fstruct")) nil [51394 52530]) ("htmlize-css-insert-head" function (:arguments ("buffer-faces" "face-map")) nil [52532 53786]) ("htmlize-css-insert-text" function (:arguments ("text" "fstruct-list" "buffer")) nil [53788 54296]) ("htmlize-inline-css-body-tag" function (:arguments ("face-map")) nil [54332 54496]) ("htmlize-inline-css-insert-text" function (:arguments ("text" "fstruct-list" "buffer")) nil [54498 54957]) ("htmlize-font-body-tag" function (:arguments ("face-map")) nil [54998 55219]) ("htmlize-font-insert-text" function (:arguments ("text" "fstruct-list" "buffer")) nil [55228 56290]) ("htmlize-buffer-1" function nil nil [56293 61600]) ("htmlize-with-fontify-message" function (:arguments ("&rest" "body")) nil [61625 62097]) ("htmlize-ensure-fontified" function nil nil [62099 63349]) ("htmlize-buffer" function (:user-visible-flag t :arguments ("&optional" "buffer")) nil [63368 64258]) ("htmlize-region" function (:user-visible-flag t :arguments ("beg" "end")) nil [64275 64726]) ("htmlize-region-for-paste" function (:arguments ("beg" "end")) nil [64728 65286]) ("htmlize-make-file-name" function (:arguments ("file")) nil [65288 65778]) ("htmlize-file" function (:user-visible-flag t :arguments ("file" "&optional" "target")) nil [66196 68851]) ("htmlize-many-files" function (:user-visible-flag t :arguments ("files" "&optional" "target-directory")) nil [68868 70165]) ("htmlize-many-files-dired" function (:user-visible-flag t :arguments ("arg" "&optional" "target-directory")) nil [70182 70372]) ("htmlize" package nil nil [70374 70392]))
    :file "htmlize.el"
    :pointmax 70419
    )
   (semanticdb-table "setnu.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setnu" package nil nil [1223 1239]) ("setnu-running-under-xemacs" variable (:constant-flag t :default-value (or (string-match "XEmacs" emacs-version) (string-match "Lucid" emacs-version))) nil [1241 1366]) ("setnu-mode-version" variable (:constant-flag t :default-value "1.06") nil [1368 1455]) ("setnu-mode" variable nil nil [1457 1539]) ("make-variable-buffer-local" code nil nil [1540 1580]) ("setnu-start-extent" variable nil nil [1582 2038]) ("make-variable-buffer-local" code nil nil [2039 2087]) ("setnu-glyph-obarray" variable (:default-value (make-vector 401 0)) nil [2089 2395]) ("setnu-begin-glyph-property" variable (:default-value (if (fboundp (quote extent-property)) (quote begin-glyph) (quote before-string))) nil [2397 2574]) ("setnu-line-number-format" variable (:default-value (if setnu-running-under-xemacs "%4d" "%6d  ")) nil [2576 2836]) ("setnu-line-number-face" variable (:user-visible-flag t :default-value (quote bold)) nil [2838 2982]) ("setnu-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [2984 3481]) ("turn-on-setnu-mode" function nil nil [3483 3728]) ("setnu-running-under-xemacs" variable (:constant-flag t :default-value (or (string-match "XEmacs" emacs-version) (string-match "Lucid" emacs-version))) nil [3924 4049]) ("unless" code nil nil [4051 4269]) ("if" code nil nil [4271 4387]) ("if" code nil nil [4389 4513]) ("if" code nil nil [4515 4642]) ("if" code nil nil [4644 4783]) ("if" code nil nil [4785 4928]) ("if" code nil nil [4930 5069]) ("if" code nil nil [5071 5218]) ("if" code nil nil [5220 5443]) ("fset" code nil nil [5449 5527]) ("cond" code nil nil [5529 5845]) ("setnu-mode-off" function nil nil [5847 6305]) ("setnu-mode-on" function nil nil [6307 7368]) ("setnu-before-change-function" function (:arguments ("start" "end")) nil [7370 9424]) ("setnu-after-change-function" function (:arguments ("start" "end" "length")) nil [9426 12060]) ("setnu-number-glyph" function (:arguments ("number-string")) nil [12062 12322]) ("setnu-make-setnu-extent" function (:arguments ("beg" "end")) nil [12324 12702]) ("cond" code nil nil [12704 14646]) ("setnu-extent-at-create" function (:arguments ("pos" "buf")) nil [14648 16751]) ("add-hook" code nil nil [16753 16818]) ("add-hook" code nil nil [16819 16882]))
    :file "setnu.el"
    :pointmax 16907
    )
   (semanticdb-table "shell-completion.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("shell-completion" package nil nil [1536 1563]) ("comint" include nil nil [1585 1602]) ("cl" include nil nil [1605 1618]) ("shell-completion-sudo-cmd" variable (:default-value "sudo") nil [1621 1662]) ("shell-completion-options-alist" variable (:default-value (quote (("apt-get" "remove" "install" "update" "dist-upgrade") ("dpkg" "--get-selections" "--set-selections") ("mplayer" "--help" "-vobsubid")))) nil [1664 1861]) ("shell-completion-prog-cmd-alist" variable (:default-value (quote (("lftp" "help" "open" "get" "mirror" "exit" "mget") ("mysql" "show" "desc" "create" "update")))) nil [1863 2071]) ("shell-completion-prog-cmdopt-alist" variable (:default-value (\` (("mysql" ("show" "tables" "databases") ("create" "table" "database"))))) nil [2073 2264]) ("shell-completion-prog-command" function nil nil [2291 3180]) ("shell-completion-get-alist" function nil nil [3184 3922]) ("eval-after-load" code nil nil [3924 6148]) ("shell-completion-get-column" function (:arguments ("start" "end" "col" "&optional" "sep")) nil [6197 6716]) ("shell-completion-get-file-column" function (:arguments ("file" "col" "&optional" "sep")) nil [6733 6917]))
    :file "shell-completion.el"
    :pointmax 6953
    )
   (semanticdb-table "smart-snippet.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [10050 10063]) ("defgroup" code nil nil [10065 10218]) ("snippet-bound-face" variable (:user-visible-flag t :default-value (quote bold)) nil [10220 10332]) ("snippet-field-face" variable (:user-visible-flag t :default-value (quote highlight)) nil [10334 10454]) ("snippet-field-identifier" variable (:user-visible-flag t :default-value "$$") nil [10456 10580]) ("snippet-exit-identifier" variable (:user-visible-flag t :default-value "$.") nil [10582 10716]) ("snippet-field-default-beg-char" variable (:user-visible-flag t :default-value 123) nil [10718 10870]) ("snippet-field-default-end-char" variable (:user-visible-flag t :default-value 125) nil [10872 11023]) ("snippet-indent" variable (:user-visible-flag t :default-value "$>") nil [11025 11153]) ("snippet-line-terminator" variable (:user-visible-flag t :default-value "
") nil [11155 11297]) ("snippet-map" variable (:default-value (make-sparse-keymap)) nil [11299 11401]) ("define-key" code nil nil [11427 11495]) ("define-key" code nil nil [11496 11564]) ("define-key" code nil nil [11565 11633]) ("snippet" type (:members ("bound" "fields" "exit-marker") :type "struct") nil [11635 12320]) ("snippet" variable nil nil [12322 12455]) ("make-variable-buffer-local" code nil nil [12457 12494]) ("snippet-make-bound-overlay" function nil nil [12496 13040]) ("snippet-make-field-overlay" function (:arguments ("&optional" "name")) nil [13042 13928]) ("snippet-fields-with-name" function (:arguments ("name")) nil [13930 14154]) ("snippet-bound-modified" function (:arguments ("bound" "after" "beg" "end" "&optional" "change")) nil [14156 14604]) ("snippet-field-insert" function (:arguments ("field" "after" "beg" "end" "&optional" "change")) nil [14606 15071]) ("snippet-field-modified" function (:arguments ("field" "after" "beg" "end" "&optional" "change")) nil [15073 15698]) ("snippet-field-update" function (:arguments ("field" "after" "beg" "end" "&optional" "change")) nil [15700 16477]) ("snippet-exit-snippet" function nil nil [16479 16785]) ("snippet-next-field" function (:user-visible-flag t) nil [16787 17478]) ("snippet-prev-field" function (:user-visible-flag t) nil [17480 18195]) ("snippet-cleanup" function nil nil [18197 18538]) ("snippet-field-regexp" function nil nil [18540 18993]) ("snippet-split-string" function (:arguments ("string" "&optional" "separators" "include-separators-p")) nil [18995 19708]) ("snippet-split-regexp" function nil nil [19710 19911]) ("snippet-insert" function (:user-visible-flag t :arguments ("template")) nil [19913 24120]) ("snippet-strip-abbrev-table-suffix" function (:arguments ("str")) nil [24122 24317]) ("snippet-make-abbrev-expansion-hook" function (:arguments ("abbrev-table" "abbrev-name" "template")) nil [24319 25319]) ("snippet-abbrev" function (:arguments ("abbrev-table" "abbrev-name" "template")) nil [25321 26190]) ("snippet-with-abbrev-table" function (:arguments ("abbrev-table" "&rest" "snippet-alist")) nil [26192 26844]) ("snippet" package nil nil [26846 26864]) ("smart-snippet" package nil nil [41132 41156]) ("cl" include nil nil [41157 41170]) ("defgroup" code nil nil [41172 41324]) ("snippet-bound-face" variable (:user-visible-flag t :default-value (quote bold)) nil [41326 41438]) ("snippet-field-face" variable (:user-visible-flag t :default-value (quote highlight)) nil [41440 41560]) ("snippet-field-identifier" variable (:user-visible-flag t :default-value "$$") nil [41562 41686]) ("snippet-exit-identifier" variable (:user-visible-flag t :default-value "$.") nil [41688 41822]) ("snippet-field-default-beg-char" variable (:user-visible-flag t :default-value 123) nil [41824 41976]) ("snippet-field-default-end-char" variable (:user-visible-flag t :default-value 125) nil [41978 42129]) ("snippet-indent" variable (:user-visible-flag t :default-value "$>") nil [42131 42259]) ("snippet-line-terminator" variable (:user-visible-flag t :default-value "
") nil [42261 42403]) ("snippet-escape-char-guard" variable (:user-visible-flag t :default-value "PLUSKIDSMARTSNIPPETESCAPEGUARD") nil [42405 42558]) ("snippet-skip-same-field" variable (:user-visible-flag t) nil [42560 43438]) ("snippet-orig-buffer-undo-list" variable (:default-value t) nil [43440 43650]) ("make-variable-buffer-local" code nil nil [43652 43712]) ("make-variable-buffer-local" code nil nil [43713 43773]) ("make-variable-buffer-local" code nil nil [43774 43818]) ("make-variable-buffer-local" code nil nil [43819 43872]) ("make-variable-buffer-local" code nil nil [43873 43927]) ("make-variable-buffer-local" code nil nil [43928 43983]) ("make-variable-buffer-local" code nil nil [43984 44037]) ("make-variable-buffer-local" code nil nil [44038 44097]) ("snippet-map" variable (:default-value (make-sparse-keymap)) nil [44099 44201]) ("define-key" code nil nil [44227 44295]) ("define-key" code nil nil [44296 44364]) ("define-key" code nil nil [44365 44433]) ("snippet" type (:members ("bound" "fields" "exit-marker") :type "struct") nil [44435 45119]) ("snippet" variable nil nil [45121 45254]) ("make-variable-buffer-local" code nil nil [45256 45293]) ("snippet-make-bound-overlay" function nil nil [45295 45839]) ("snippet-make-field-overlay" function (:arguments ("&optional" "name")) nil [45841 46725]) ("snippet-fields-with-name" function (:arguments ("name")) nil [46727 46950]) ("snippet-bound-modified" function (:arguments ("bound" "after" "beg" "end" "&optional" "change")) nil [46952 47400]) ("snippet-field-insert" function (:arguments ("field" "after" "beg" "end" "&optional" "change")) nil [47402 47867]) ("snippet-field-modified" function (:arguments ("field" "after" "beg" "end" "&optional" "change")) nil [47869 48494]) ("snippet-field-update" function (:arguments ("field" "after" "beg" "end" "&optional" "change")) nil [48496 49272]) ("snippet-exit-snippet" function nil nil [49274 49580]) ("snippet-undo-snippet" function (:arguments ("abbrev" "begin" "end")) nil [49582 49790]) ("snippet-field-same-name-p" function (:arguments ("a" "b")) nil [49792 49898]) ("snippet-current-field" function nil nil [49899 50130]) ("snippet-next-field" function (:user-visible-flag t) nil [50132 51216]) ("snippet-prev-field" function (:user-visible-flag t) nil [51218 52327]) ("snippet-cleanup" function nil nil [52329 52670]) ("snippet-field-regexp" function nil nil [52672 53125]) ("snippet-split-string" function (:arguments ("string" "&optional" "separators" "include-separators-p")) nil [53127 53840]) ("snippet-split-regexp" function nil nil [54635 54901]) ("smart-snippet-insert" function (:user-visible-flag t :arguments ("abbrev" "template")) nil [54903 60590]) ("snippet-strip-abbrev-table-suffix" function (:arguments ("str")) nil [60592 60787]) ("snippet-make-abbrev-expansion-hook" function (:arguments ("abbrev-table" "abbrev-name" "template")) nil [60789 61806]) ("snippet-abbrev" function (:arguments ("abbrev-table" "abbrev-name" "template")) nil [61808 62677]) ("snippet-with-abbrev-table" function (:arguments ("abbrev-table" "&rest" "snippet-alist")) nil [62679 63331]) ("smart-snippet-expand" function (:arguments ("abbrev" "&optional" "abbrev-table" "call-directly")) nil [63334 65426]) ("smart-snippet-try-expand" function (:arguments ("abbrev" "template" "condition")) nil [65428 66108]) ("smart-snippet-inside-comment-p" function (:arguments ("&optional" "on")) nil [66178 66570]) ("smart-snippet-make-snippet-function-symbol" function (:arguments ("abbrev-name" "abbrev-table")) nil [66572 66822]) ("smart-snippet-make-abbrev-expansion-hook" function (:arguments ("abbrev-table" "abbrev-name")) nil [66824 67698]) ("smart-snippet-abbrev-table" function (:arguments ("abbrev-table-name")) nil [67700 68153]) ("smart-snippet-abbrev" function (:arguments ("abbrev-table" "abbrev-name" "template" "condition")) nil [68155 69763]) ("smart-snippet-set-snippet-key" function (:arguments ("keymap" "abbrev-table" "abbrev-name" "key")) nil [69765 70625]) ("smart-snippet-flatten-1" function (:arguments ("list")) nil [70627 70900]) ("smart-snippet-quote-element" function (:arguments ("list")) nil [70901 71004]) ("smart-snippet-with-abbrev-tables" function (:arguments ("abbrev-tables" "&rest" "snippets")) nil [71005 71532]) ("smart-snippet-with-keymaps" function (:arguments ("keymap-and-abbrev-tables" "&rest" "map-list")) nil [71533 72293]))
    :file "smart-snippet.el"
    :pointmax 72328
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
