<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn">
  <head>
    <title>Muse 3.03 (not yet released)</title>
    <meta name="generator" content="Muse">
    <meta http-equiv="Content-Type"
          content="text/xhtml; charset=utf-8">
    <link rel="stylesheet" type="text/css" charset="utf-8" media="all"
          href="./common/stylesheets/core.css" />
    <link rel="made" href="mailto:larisq{at}gmail.com" />
    <link rel="shortcut icon" href="./common/images/my-icon.ico" >
  </head>
  <body>
    <h1 id=top>Muse 3.03 (not yet released)
   <!-- Google Search -->
     <div class="searchbar">
        <form id="searchbar" method="get" action="http://www.google.com/custom" title="My Site Search">
           <div id="searchbar">
              <label for="q" title="Search this site">
                     <img src="./common/images/google.gif" ></label>
              <input type=hidden name=domains value="http://www.larisq.3322.org/">
              <input type=hidden name=sitesearch value="http://www.larisq.3322.org/">
              <input type="text" id="q" name="q" accesskey="s" size="16">
              <input type="submit" id="submit" value="Go">
           </div>
        </form>
     </div>
   <!-- Google Search -->
  </h1>
   <!-- menu start here -->
     <div class="menu">
        <div class="menuitem">
          <a href=" ./index.html">Home</a>
        </div>
        <div class="menuitem">
          <a href=" ./wiki/index.html">WiKiNotes</a>
        </div>
      </div>
    <!-- menu ends here -->
 <!-- Page published by Emacs Muse begins here -->


<p><a href="http://www.mwolson.org/static/dist/muse/NEWS-3.03">http://www.mwolson.org/static/dist/muse/NEWS-3.03</a>
<pre class="example">
Emacs Muse NEWS --- History of user-visible changes    -*- outline -*-

* Changes in Muse 3.03 (not yet released)

** Blosxom publishing (lisp/muse-blosxom.el)

*** New option: muse-blosxom-use-tags.
This specifies whether or not we are using tags.  Tags allow a page to
belong to multiple categories, but they do not rely on the directory
structure for categorization.

*** Use `find-file' as the browsing function.

*** Improve internal documentation for the included pyblosxom plug-ins.

*** New example script: contrib/pyblosxom/make-blog.
This shows how to invoke contrib/pyblosxom/getstamps.py.

** Building Muse

*** Compile the contents of the contrib directory.

*** The debian/ directory has been moved into its own branch.
It is now available at mwolson@gnu.org--2006/muse--debian--0.

*** Further parametrize the build system, so that it can be easily
used by other Emacs Lisp projects.

*** Include autoloads file (lisp/muse-autoloads.el) with releases.

** Core functionality (lisp/muse.el)

*** Fix an XEmacs beta byte-compiler issue.

*** Make nested list manipulation accessible to both Muse Mode
and Muse publishing.

*** Fix failure to recognize the .muse file extension.
Handle the case where the user customizes the file extension.

*** It is now easier to indicate that Muse should not use a file
extension.  Just do the following.

(setq muse-file-extension nil
      muse-mode-auto-p t)

*** Allow tab characters in explicit links.

*** Escape brackets in links, and then un-escape them when displaying
the link in a buffer of publishing it.  This allows brackets to be
safely used in link descriptions and links, as long as you use `C-c
TAB l', `C-c TAB u', `C-c C-e', or automatic Planner annotations.

** HTML publishing (lisp/muse-html.el)

*** Make sure spaces in URLs get escaped properly.

*** Make the Table of Contents CSS easier to customize.
For an example, see examples/mwolson/stylesheets/screen.css.

** HTTP daemon (contrib/httpd.el)

*** Update this to work with newer versions of Emacs.

*** Fix a paragraph detection bug for paragraphs that occur after
verses.

** Importing LaTeX documents (lisp/muse-import-latex.el)

*** Rename from muse-convert.el.
There are plans for importing other formats into Muse as well.

** Journal (lisp/muse-journal.el)

*** New option: muse-journal-rss-heading-regexp.
Determine the regexp to use when searching for an RSS heading.

*** Make sure that the date is in a format that RSS readers
can handle.

** LaTeX publishing (lisp/muse-latex.el)

*** Improve escaping of specials.

*** Use \label{} and \ref{} for anchors and anchor references.

*** Emphasize table elements.

*** Improve table generation.

*** Use \url{} to publish bare URLs.

*** Handle case where a Muse page begins with a quote character.

*** Display footnotes when we have both a URL and description.
This makes the URLs show up on printed documents in a sensible
fashion.

*** Escape the &quot;@&quot; character in the entire document.

*** Make images take up 75% of the width of the page.

*** New option: muse-latex-permit-contents-tag.
This specifies whether we should take action on the &lt;contents&gt; tag.

** Muse Manual (muse.texi)

*** Use better style for subsections.

*** Make sure the PDF file for the manual is properly generated.

*** Implicit Links

**** Mention how to customize the WikiName recognition.

*** Extending Muse

**** Move &quot;Common Elements&quot; and &quot;Deriving Styles&quot; chapters here.

** Muse Mode (lisp/muse-mode.el)

*** `C-c TAB' now inserts an object, prompting the user for which type.
`C-c TAB l' inserts a relative link.
`C-c TAB t' inserts a Muse tag.
`C-c TAB u' inserts a URL.

These keybindings may be modified by editing `muse-insert-map'.  Note
that the prompt you get when you hit `C-c TAB' will not change.

*** New list-oriented keybindings:
`M-RET' inserts a list item.
`C-&gt;' increases list item indentation.
`C-&lt;' decreases list item indentation.

*** Slightly improvement speed of flyspell integration

*** Implement searching through Muse files.

**** `C-c C-s' performs a search through Muse files.

**** New option: muse-grep-command.
Customize this to specify the command used for searching.  In
particular, &quot;glimpse&quot; is handy.  Check the documentation for this
command for details.

*** Changed keybindings:
`C-c C-b' is now `muse-find-backlinks'
`C-c C-v' is now `muse-browse-result'

*** Don't require muse-publish.el, since publishing and viewing Muse
files are supposed to be completely separable.

*** Speed up searching for next and previous references.

*** Make filling definition lists work better.

*** Make editing existing links with `C-c C-e' work better.

*** Make browsing the resulting page with `C-c C-v' work better.

*** Don't throw an error if doing flyspell or following link at
beginning of buffer.

*** When publishing a file with `C-c C-t', consult muse-project-alist
and use its publishing styles to intelligently prompt the user as to
the publishing style and output directory.

The old behavior of allowing the file to be published anywhere and
with any style has been moved to `C-c C-T'.

*** Clicking `mouse-2' now does the right thing when
mouse-yank-at-point is non-nil.

** Muse Mode highlighting (lisp/muse-colors.el)

*** New option: muse-colors-inline-images.
This determines whether or not to inline an image.  The default is to
enable this behavior.

**** `C-c C-i' toggles whether images are inlined.

**** New option: muse-colors-inline-image-method.
This determines how to find an image that we want to inline.  The
default is to look in the current directory.  If set to
'muse-colors-use-publishing-directory, it will look in the directory
where the current page will be published.

*** Make faces conform the namespace better.
`muse-link-face' is renamed to `muse-link'.
`muse-bad-link-face' is renamed to `muse-bad-link'.
`muse-verbatim-face' is renamed to `muse-verbatim'.

*** Handle muse-emphasis faces better.

*** Make links blue by default, like most other Emacs modes do.

** New modules

*** lisp/muse-backlink.el -- Provide backlink support for Muse.

*** lisp/muse-groff.el --  This introduces the publishing styles
&quot;groff&quot; and &quot;groff-pdf&quot;.

*** lisp/muse-latex2png.el -- Publish embedded LaTeX content to a PNG file.
This introduces the &lt;latex&gt; tag.

*** lisp/muse-xml-common.el -- Common functionality used by XML-based
publishing styles, such as HTML, XML, and DocBook.

*** experimental/muse-mathml.el -- This introduces the &quot;mathml&quot;
publishing style and the &lt;math&gt; tag.

*** experimental/muse-protocol-iw.el: Implements a simpler URL-like
interwiki protocol that handles subdirectories.

*** experimental/muse-split.el -- Splits published Muse files into several
smaller files.

** Project settings (lisp/muse-project.el)

*** Introduce the `with-muse-project' macro, which makes it easier
to switch to a given Muse project and execute some code.

*** Fix an error with `custom-quote'.

*** Ignore buffers that have no associated filename.
This fixes an annoyance where Muse prompts to save BBDB and ERC
buffers before publishing.

*** If we cannot find a project to publish, indicate this in an
error message.  This fixes an infinite loop.

*** Update the file-alist whenever a Muse file is saved.

*** Prevent infinite recursion when updating the file alist.

*** In addition to Arch and CVS metadata directories, also ignore
these for Darcs and SVN.  Also, don't erroneously ignore files with
&quot;#&quot; in them.

*** Make links to subdirectories work.
The idea is to include as much of the path that is needed in order to
disambiguate the link.  For example: &quot;web/TestPage&quot;.

*** New variable: muse-current-output-style.
This holds the output style that is currently being used to publish a
file.

** Publishing (lisp/muse-publish.el)

*** Implement escaping of specials throughout the entire document.
This makes it much easier to publish documents to multiple kinds of
formats, since you no longer have to worry about putting &lt;verbatim&gt;
around specials.

*** Make escaping of specials context-sensitive.
Muse now realizes that URLs, normal document text, &lt;example&gt; regions,
and the like have different special characters to escape.

*** Distinguish links and footnotes better.

*** Simplify markup string for anchors.

*** Allow text like &quot;%N%&quot; in markup strings.
This makes it much easier to re-use the same text or put strings in
a different order.

*** Support nested lists.
Muse now determines the nested level of a list by its initial
whitespace.  Ordered lists, unordered lists, and definition lists can
all be nested.  It is even possible to force a line break in a list
item by inserting a blank line on the same level between the lines.
Blockquotes may also be nested inside of a list.

*** Create parent directories when publishing for the first time.

*** Allow empty elements in tables.

*** Allow initial and trailing whitespace in tables, but strip it
out of the published result.

*** Handle case where we are trying to publish a file that has not
been saved.

*** Handle nested emphasis types better.
It should now publish exactly the way it looks in Muse Mode.

*** Fix XEmacs issue where text at beginning of buffer is read-only.

*** Allow publishing styles to specify a function to use for
escaping specials in a particular context.  This is especially handy
for HTML URLs, since they have a larger subset of special characters
than normal characters.

See `muse-xml-decide-specials' in muse-xml-common.el for details.
This functionality already exists for escaping specials in strings.

*** Fix an infinite loop problem.

*** Preserve whitespace around emdash.
This allows for more flexibility, since some people seem to prefer to
have the emdash directly against the surrounding text, while others
like it to be spaced.

*** If the #disable-tables publishing directive exists on the current
Muse page, do not generate a table.

*** Don't give an error when trying to define or derive an existing
style.  Just replace it.

*** Get rid of a warning that occurs when batch publishing.

*** Ignore list items that are part of higher-priority constructs
like emphasis.

*** Don't markup emdash in a link, since otherwise it will be
incorrectly escaped.

*** Improve the published descriptions for implicit links and explicit
links with no provided description.

*** Require at least once space after &quot;::&quot; in definition lists, so
we avoid an ambiguity with interwiki link syntax.

*** For headers and footers, use a better algorithm to detect whether
we have been given a filename or the real contents.

*** New option: muse-publish-markup-header-footer-tags.
This specifies which tags may be used when publishing headers and
footers.

*** New option: muse-publish-contents-depth.

This specifies the maximum depth of headings to include with
&lt;contents&gt; tags.

*** Allow `muse-publish-markup-buffer' to work even if the buffer
is not associated with a file.

*** Fix a compilation bug with XEmacs beta.

*** Allow the &lt;lisp&gt; tag to take the &quot;markup&quot; attribute.
see the Tag Summary section in the manual for details.

*** Publish image links with descriptions as captioned images.
This has been implemented for all Muse publishing styles.

The major change is that image links with descriptions will be
centered and the description will be displayed just below the image as
a &quot;caption&quot;.  Thus, it is meant to only be used as its own paragraph,
not surrounded by other text.  Images without descriptions may still
have surrounding text.

*** Source-level change: Use 'image instead of 'image-link to indicate
images without descriptions.  Use 'image-link instead of
'url-with-image to indicate URLs that have an image as their
description.

*** New tags, see the Tag Summary section in the manual for details

**** &lt;comment&gt; -- Designate entire regions as comments.

**** &lt;include&gt; -- Insert the given file at publish time.

**** &lt;markup&gt; -- Mark up the text between the initial and ending tags.

**** &lt;perl&gt; -- Evaluate perl code.

**** &lt;python&gt; -- Evaluate python code.

**** &lt;quote&gt; -- Publish the region as a blockquote.

**** &lt;ruby&gt; -- Evaluate ruby code.

** Texinfo publishing (lisp/muse-texinfo.el)

*** Escape commas in URLs.

*** Make it so that links to other info or PDF documents use the proper
suffix.

** URL protocols (lisp/muse-protocols.el)

*** Add support for DOI's.
DOI's (digitial object identifiers) are a standard identifier used in
the publishing industry.

*** Add support for &quot;dict:&quot; URLs.
This is used to look up terms on the Wikipedia website.

**** New option: muse-wikipedia-country.
This specified the country code to use for Wikipedia.

** Wiki (lisp/muse-wiki.el)

*** If the document does not have a valid title string, use the
empty string.

*** Fix some bugs.

*** New option: muse-wiki-wikiword-match-project-files.
Whether to extend WikiName functionality to also match
existing filenames, regardless of whether they are named in
WikiWord format.

If non-nil, Muse will color and publish implicit links to any
file in your project.  The default is nil.

*** Match filenames in the project before the general WikiWord
regexp.

*** Take the value of `muse-wiki-hide-nop-tag' into account.

*** New option: muse-wiki-ignore-implicit-links-to-current-page.
Whether to ignore implicit links to the current page.

If non-nil, Muse will not recognize implicit links to the current
page, both when formatting and publishing.

*** For interwiki links, prefer files that have the same file extension
as the current file.

** XML publishing (lisp/muse-xml.el)

*** Update examples/muse.rnc to handle nested list items.

*** Fix table generation when some attributes are not given.
</pre></p>

<!-- Page published by Emacs Muse ends here -->
    <div class="navfoot">
      <hr>
      <table summary="Footer navigation" width="100%" border="0" >
        <col width="33%"><col width="34%" ><col width="33%" >
	<tbody>
          <tr>
          <td align="left">
	    <span class="footdate">
	      Updated:
	      2006-08-25-14:58:41
	  </td>
	  <td align="center">
	    <span class="foothome">
              [ <a href=./index.html>Home</a> | <a href=index.html>Default</a> | <a href=WikiIndex.html>WikiIndex</a> ]
	    </span>
	  </td>
	  <td align="right">
	    larisq {at} gmail.com
	  </td>
          </tr>
        </tbody>
      </table>
      <a href="http://www.debian.org/"><img style="border: 0em none ;" 
             src=" ./common/images/powered_by_debian.png " alt="Debian Logo"></a>
      <a href="http://www.gnu.org/software/emacs/emacs.html">
	<img style="border: 0em none ;" 
		src=" ./common/images/powered_by_GNU_Emacs.jpg " alt="Emacs Logo"></a>
      <a href="http://www.mwolson.org/projects/EmacsMuse.html">
	<img style="border: 0em none ;" 
		src=" ./common/images/muse-powered-by.png " alt="Emacs Muse Logo"></a>
      <a href="http://www.emacswiki.org/"
         style="text-decoration: none;">
        <img src=" ./common/images/emacswiki.png " alt="Emacswiki.org Logo"></a>
      <a href="http://www.getfirefox.com/"><img style="border: 0em none ;" 
         src=" ./common/images/get_firefox.gif " alt="Firefox Logo"></a>
      <a href="http://validator.w3.org/check?uri=referer" 
	 style="text-decoration: none;">
        <img src=" ./common/images/valid-xh.png " 
             alt="Valid XHTML 1.0!" height="31" width="88" />
      </a>
      <a href="http://jigsaw.w3.org/css-validator/"
         style="text-decoration: none;">

        <img style="border:0;width:88px;height:31px"
             src=" ./common/images/vcss.gif " 
             alt="Valid CSS!" />
      </a>
    </div>
  </body>
</html>
